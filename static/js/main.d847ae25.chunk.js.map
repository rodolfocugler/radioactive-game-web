{"version":3,"sources":["styles/global.js","assets/nuclear.svg","utils/form/index.js","services/auth.js","services/api.js","utils/app/index.js","pages/signup/index.js","pages/signup/styles.js","pages/signin/index.js","pages/signin/styles.js","pages/home/styles.js","pages/home/index.js","routes.js","App.js","index.js"],"names":["createGlobalStyle","validate","validation","value","i","length","error","validateFields","fields","keys","Object","key","validateForm","resetForm","isRequired","TOKEN_KEY","TOKEN_EXPIRES_AT","PASSWORD","getToken","localStorage","getItem","saveLoginResponse","token","password","decodedToken","jwt","setItem","exp","toString","refreshLogin","a","user","getUser","login","email","api","post","response","headers","authorization","id","parseInt","sub","aud","name","environment","group","isLeader","axios","create","baseURL","interceptors","request","use","config","Authorization","Copyright","Typography","variant","color","align","Date","getFullYear","SignIn","state","changeValue","e","target","nextState","setState","handleSignUp","preventDefault","updatedFields","console","log","classes","this","props","Container","component","maxWidth","CssBaseline","className","paper","src","Logo","alt","logo","form","noValidate","onSubmit","TextField","margin","required","fullWidth","label","autoComplete","autoFocus","helperText","onChange","type","Button","submit","Box","mt","Component","withStyles","theme","marginTop","spacing","display","flexDirection","alignItems","width","height","backgroundColor","handleSignIn","history","push","drawerWidth","Home","message","messageAll","menuLeftOpen","menuRightOpen","environments","currentEnvironment","questions","description","responses","tools","chatMessages","chatMessagesAll","newMessages","accounts1","accounts2","car1","fromEnvironment","toEnvironment","car2","tool1","tool2","logout","removeItem","handleMenu","get","then","data","handleAccounts","accounts","forEach","red","handleCars","carIndex","list","JSON","parse","stringify","undefined","filter","t","trim","handleCurrentEnvironment","handleTools","handleMessages","handleOpenLeftMenu","handleCloseLeftMenu","handleOpenRightMenu","handleCloseRightMenu","changeMessage","handleSendMessage","isAll","endpoint","msg","chatInputAll","current","focus","chatInput","catch","err","changeResponse","index","substring","selectAccount","accountIndex","carNumber","green","handleCarGo","car","map","split","accountGroup","timestamp","onChangeEnvironmentTo","handleSendResponses","question","text","account","reason","alert","React","createRef","stompClient","Stomp","over","SockJS","transports","connect","subscribe","body","numberOfNewMessages","concat","transport","root","AppBar","position","clsx","appBar","appBarShift","Toolbar","toolbar","IconButton","edge","aria-label","onClick","menuButtonLeft","menuButtonHidden","noWrap","title","menuButtonRight","Badge","badgeContent","ExitToApp","Drawer","drawerPaper","drawerPaperClose","open","toolbarIcon","Divider","List","ListItem","button","ListItemIcon","createElement","Icons","icon","ListItemText","primary","SwipeableDrawer","anchor","onClose","onOpen","toolbarIconRight","rightMenu","chatMessageAccount","dangerouslySetInnerHTML","__html","chatForm","inputRef","multiline","inputProps","maxLength","rowsMax","Send","content","appBarSpacer","container","Grid","item","xs","Paper","toolsDiv","p","m","justify","carGrid","Adjust","style","Autocomplete","options","renderOption","option","Fragment","event","getOptionLabel","renderInput","params","carButton","pt","paddingRight","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","marginRight","flexGrow","whiteSpace","overflowX","breakpoints","up","overflow","paddingTop","paddingBottom","minHeight","fixedHeight","overflowY","border","alignSelf","fontWeight","PrivateRoute","rest","render","getTime","to","pathname","from","location","Routes","basename","exact","path","SignUp","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d847ae25.chunk.js","sourcesContent":["import {createGlobalStyle} from \"styled-components\";\n\nimport \"font-awesome/css/font-awesome.css\";\n\ncreateGlobalStyle`\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n  outline: 0;\n}\nbody, html {\n  background: #eee;\n  font-family: 'Helvetica Neue', 'Helvetica', Arial, sans-serif;\n  text-rendering: optimizeLegibility !important;\n  -webkit-font-smoothing: antialiased !important;\n  height: 100%;\n  width: 100%;\n}\n`;","export default __webpack_public_path__ + \"static/media/nuclear.272c3b9e.svg\";","export const validate = (validation, value) => {\n    for (let i = 0; i < validation.length; i++) {\n        let error = validation[i](value);\n        if (error !== \"\") {\n            return error;\n        }\n    }\n\n    return \"\";\n};\n\nexport const validateFields = (fields) => {\n    const keys = Object.keys(fields);\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let validation = fields[key][\"validation\"];\n        let value = fields[key][\"value\"];\n\n        fields[key][\"error\"] = validate(validation, value);\n    }\n\n    return fields;\n};\n\nexport const validateForm = (fields) => {\n    const keys = Object.keys(fields);\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        if (fields[key][\"error\"] !== \"\") return false;\n    }\n\n    return true;\n};\n\nexport const resetForm = (fields) => {\n    const keys = Object.keys(fields);\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        fields[key][\"value\"] = \"\";\n    }\n\n    return fields;\n};\n\nexport const isRequired = (value) => {\n    return !value ? \"Preencha para continuar!\" : \"\";\n};\n","import jwt from \"jwt-decode\"\nimport api from \"./api\";\n\nexport const TOKEN_KEY = \"TOKEN_KEY\";\nexport const TOKEN_EXPIRES_AT = \"TOKEN_EXPIRES_AT\";\nexport const PASSWORD = \"PASSWORD\";\nexport const isAuthenticated = () => {\n    return localStorage.getItem(TOKEN_KEY) !== null &&\n        new Date().getTime() / 1000 < parseInt(localStorage.getItem(TOKEN_EXPIRES_AT));\n};\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\nexport const saveLoginResponse = (token, password) => {\n    const decodedToken = jwt(token);\n    localStorage.setItem(TOKEN_KEY, token);\n    localStorage.setItem(PASSWORD, password);\n    localStorage.setItem(TOKEN_EXPIRES_AT, decodedToken.exp.toString());\n};\nexport const refreshLogin = async () => {\n    const user = getUser();\n    await login(user.email, user.password);\n};\nexport const login = async (email, password) => {\n    const response = await api.post(\"/login\", {\n        \"email\": email,\n        \"password\": password\n    });\n    saveLoginResponse(response.headers.authorization, password);\n};\nexport const logout = () => {\n    localStorage.removeItem(TOKEN_KEY);\n    localStorage.removeItem(TOKEN_EXPIRES_AT);\n};\nexport const getUser = () => {\n    const decodedToken = jwt(localStorage.getItem(TOKEN_KEY));\n    return {\n        id: parseInt(decodedToken.sub),\n        email: decodedToken.aud,\n        name: decodedToken.user,\n        environment: decodedToken.environment,\n        group: decodedToken.group,\n        isLeader: decodedToken.isLeader,\n        password: localStorage.getItem(PASSWORD)\n    }\n};","import axios from \"axios\";\nimport {getToken} from \"./auth\";\nimport SockJS from \"sockjs-client\";\n\nexport const api = axios.create({\n    baseURL: \"https://radioactive-game.herokuapp.com\"\n});\n\nexport const wsClient = () => {\n    return new SockJS(\"https://radioactive-game.herokuapp.com/gs-websocket\",\n        null,\n        {transports: ['xhr-streaming'], headers: {'Authorization': `Bearer ${getToken()}`}});\n}\n\napi.interceptors.request.use(async config => {\n    const token = getToken();\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n});\n\nexport default api;","import {Typography} from \"@material-ui/core\";\nimport React from \"react\";\n\nexport const Copyright = () => {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {\"Copyright © \" + new Date().getFullYear()}\n        </Typography>\n    );\n}","import React, {Component} from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {Styles} from \"./styles\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {Box, Button, Container} from \"@material-ui/core\";\nimport Logo from \"../../assets/nuclear.svg\"\nimport {isRequired, resetForm, validate, validateFields, validateForm} from \"../../utils/form\";\nimport api from \"../../services/api\";\nimport {Copyright} from \"../../utils/app\";\n\nclass SignIn extends Component {\n    state = {\n        fields: {\n            name: {\n                value: \"\",\n                error: \"\",\n                validation: [isRequired]\n            },\n            email: {\n                value: \"\",\n                error: \"\",\n                validation: [isRequired]\n            },\n            password: {\n                value: \"\",\n                error: \"\",\n                validation: [isRequired]\n            }\n        }\n    };\n\n    changeValue = (e) => {\n        const value = e.target.value;\n        const name = e.target.id;\n        const nextState = this.state[\"fields\"];\n\n        nextState[name][\"value\"] = value;\n        nextState[name][\"error\"] = validate(nextState[name][\"validation\"], value);\n        this.setState(nextState);\n    }\n\n    handleSignUp = async e => {\n        e.preventDefault();\n        const {fields} = this.state;\n\n        const updatedFields = validateFields(fields);\n        if (validateForm(updatedFields)) {\n            try {\n                await api.post(\"/api/accounts\", {\n                    \"name\": fields.name.value,\n                    \"email\": fields.email.value,\n                    \"number\": fields.password.value,\n                    \"password\": fields.password.value,\n                    \"environment\": {\n                        \"id\": 1\n                    },\n                    \"isLeader\": false\n                });\n                this.setState(resetForm(fields));\n            } catch (err) {\n                console.log(err);\n            }\n        } else {\n            this.setState(updatedFields);\n        }\n    };\n\n    render() {\n        const {classes} = this.props;\n        const {fields} = this.state;\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline/>\n                <div className={classes.paper}>\n                    <img src={Logo} alt=\"Logo\" className={classes.logo}/>\n                    <form className={classes.form} noValidate onSubmit={this.handleSignUp}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"name\"\n                            label=\"Nome\"\n                            name=\"name\"\n                            autoComplete=\"Nome\"\n                            autoFocus\n                            value={fields.name.value}\n                            error={fields.name.error !== \"\"}\n                            helperText={fields.name.error}\n                            onChange={this.changeValue}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"E-mail\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            value={fields.email.value}\n                            error={fields.email.error !== \"\"}\n                            helperText={fields.email.error}\n                            onChange={this.changeValue}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"RA\"\n                            type=\"text\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            value={fields.password.value}\n                            error={fields.password.error !== \"\"}\n                            helperText={fields.password.error}\n                            onChange={this.changeValue}\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Cadastrar\n                        </Button>\n                    </form>\n                </div>\n                <Box mt={8}>\n                    <Copyright/>\n                </Box>\n            </Container>\n        );\n    }\n}\n\nexport default withStyles(Styles)(SignIn)\n\n","export const Styles = theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    logo: {\n        margin: theme.spacing(1),\n        width: \"120px\",\n        height: \"120px\",\n        backgroundColor: \"transparent\",\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});","import React, {Component} from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {Styles} from \"./styles\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {Box, Button, Container} from \"@material-ui/core\";\nimport Logo from \"../../assets/nuclear.svg\"\nimport {isRequired, validate, validateFields, validateForm} from \"../../utils/form\";\nimport {login} from \"../../services/auth\";\nimport {Copyright} from \"../../utils/app\";\n\nclass SignIn extends Component {\n    state = {\n        fields: {\n            email: {\n                value: \"\",\n                error: \"\",\n                validation: [isRequired]\n            },\n            password: {\n                value: \"\",\n                error: \"\",\n                validation: [isRequired]\n            }\n        }\n    };\n\n    changeValue = (e) => {\n        const value = e.target.value;\n        const name = e.target.id;\n        const nextState = this.state[\"fields\"];\n\n        nextState[name][\"value\"] = value;\n        nextState[name][\"error\"] = validate(nextState[name][\"validation\"], value);\n        this.setState(nextState);\n    }\n\n    handleSignIn = async e => {\n        e.preventDefault();\n        const {fields} = this.state;\n\n        const updatedFields = validateFields(fields);\n        if (validateForm(updatedFields)) {\n            try {\n                await login(fields.email.value, fields.password.value);\n                this.props.history.push(\"/app\");\n            } catch (err) {\n                fields.email.error = \"E-mail ou Senha inválidos.\"\n                fields.password.error = \"E-mail ou Senha inválidos.\"\n                this.setState(fields);\n            }\n        } else {\n            this.setState(updatedFields);\n        }\n    };\n\n    render() {\n        const {classes} = this.props;\n        const {fields} = this.state;\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline/>\n                <div className={classes.paper}>\n                    <img src={Logo} alt=\"Logo\" className={classes.logo}/>\n                    <form className={classes.form} noValidate onSubmit={this.handleSignIn}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"E-mail\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            value={fields.email.value}\n                            error={fields.email.error !== \"\"}\n                            helperText={fields.email.error}\n                            onChange={this.changeValue}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Senha\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            value={fields.password.value}\n                            error={fields.password.error !== \"\"}\n                            helperText={fields.password.error}\n                            onChange={this.changeValue}\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Entrar\n                        </Button>\n                    </form>\n                </div>\n                <Box mt={8}>\n                    <Copyright/>\n                </Box>\n            </Container>\n        );\n    }\n}\n\nexport default withStyles(Styles)(SignIn)\n\n","export const Styles = theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    logo: {\n        margin: theme.spacing(1),\n        width: \"120px\",\n        height: \"120px\",\n        backgroundColor: \"transparent\",\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});","const drawerWidth = 350;\n\nexport const Styles = theme => ({\n    root: {\n        display: \"flex\",\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: \"0 8px\",\n        ...theme.mixins.toolbar,\n    },\n    toolbarIconRight: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        padding: \"0 8px\",\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButtonLeft: {\n        marginRight: 36,\n    },\n    menuButtonRight: {\n        marginLeft: 36,\n    },\n    menuButtonHidden: {\n        display: \"none\",\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: \"relative\",\n        whiteSpace: \"nowrap\",\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: \"hidden\",\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: \"100vh\",\n        overflow: \"auto\",\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: \"flex\",\n        overflow: \"auto\",\n        flexDirection: \"column\",\n        minHeight: 540,\n    },\n    fixedHeight: {\n        height: 240,\n    },\n    rightMenu: {\n        width: drawerWidth,\n        marginLeft: \"10px\",\n        marginRight: \"10px\",\n    },\n    chatMessages: {\n        height: \"250px\",\n        overflowY: \"auto\",\n        border: \"1px solid black\"\n    },\n    chatForm: {\n        display: \"flex\",\n        flexDirection: \"row\"\n    },\n    chatInput: {\n        alignSelf: \"flex-end\"\n    },\n    chatMessageAccount: {\n        fontWeight: \"bold\"\n    },\n    carGrid: {\n        marginTop: \"20px\"\n    },\n    carButton:{\n        width: \"50px\",\n        alignSelf: \"flex-end\"\n    },\n    toolsDiv:{\n        marginTop: \"15px\",\n    },\n    tools: {\n        backgroundColor: \"#3f51b5\",\n        color: \"white\"\n    }\n});","import React, {Component} from \"react\";\nimport clsx from \"clsx\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport {Badge, Button, List, ListItemText, SwipeableDrawer, TextField, withStyles} from \"@material-ui/core\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport {Copyright} from \"../../utils/app\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport * as Icons from \"@material-ui/icons\";\nimport {Adjust, ExitToApp, Send} from \"@material-ui/icons\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport {Styles} from \"./styles\";\nimport Stomp from 'stompjs';\nimport {api, wsClient} from \"../../services/api\";\nimport {getUser, logout, refreshLogin} from \"../../services/auth\";\nimport {green, red} from \"@material-ui/core/colors\";\n\nclass Home extends Component {\n    state = {\n        message: \"\",\n        messageAll: \"\",\n        menuLeftOpen: false,\n        menuRightOpen: false,\n        environments: [],\n        currentEnvironment: {\n            id: getUser().environment,\n            questions: [{\n                id: 0,\n                description: \"\",\n                responses: []\n            }],\n            tools: []\n        },\n        chatMessages: [],\n        chatMessagesAll: [],\n        newMessages: 0,\n        accounts1: [],\n        accounts2: [],\n        car1: {\n            fromEnvironment: {\n                id: 1,\n                name: \"\"\n            },\n            toEnvironment: {\n                id: 1,\n                name: \"\"\n            }\n        },\n        car2: {\n            fromEnvironment: {\n                id: 1,\n                name: \"\"\n            },\n            toEnvironment: {\n                id: 1,\n                name: \"\"\n            }\n        },\n        tool1: \"\",\n        tool2: \"\",\n        isLeader: getUser().isLeader\n    };\n\n    constructor(props) {\n        super(props);\n        this.chatInput = React.createRef();\n        this.chatInputAll = React.createRef();\n    }\n\n    componentDidMount() {\n        this.handleMenu();\n        this.handleCurrentEnvironment();\n        this.handleMessages();\n        this.handleAccounts();\n\n        const stompClient = Stomp.over(wsClient());\n        const user = getUser();\n        stompClient.connect({}, () => {\n            stompClient.subscribe(`/topic/messages/${user.group}`,\n                (response) => {\n                    const {currentEnvironment, newMessages, menuRightOpen} = this.state;\n                    const nextState = this.state;\n                    const message = JSON.parse(response.body);\n                    const user = getUser();\n\n                    let numberOfNewMessages = newMessages;\n                    if (menuRightOpen) {\n                        numberOfNewMessages = 0;\n                    } else if (message.account.id !== user.id) {\n                        numberOfNewMessages++;\n                    }\n\n                    if (!message.environment) {\n                        nextState[\"chatMessagesAll\"] = nextState[\"chatMessagesAll\"].concat(message);\n                    } else if (message.environment.id === currentEnvironment.id) {\n                        nextState[\"chatMessages\"] = nextState[\"chatMessages\"].concat(message);\n                    } else {\n                        numberOfNewMessages = newMessages;\n                    }\n                    nextState[\"newMessages\"] = numberOfNewMessages;\n                    this.setState(nextState);\n                });\n\n            stompClient.subscribe(`/topic/transport/${user.group}`,\n                response => {\n                    const transport = JSON.parse(response.body);\n                    const user = getUser();\n                    if (transport.accounts.filter(a => a.id === user.id).length === 1) {\n                        refreshLogin().then(() => {\n                            const nextState = this.state[\"currentEnvironment\"];\n                            nextState[\"id\"] = getUser().environment;\n                            this.setState(nextState);\n                            this.handleCurrentEnvironment();\n                            this.handleMessages();\n                        });\n                    } else {\n                        this.handleTools();\n                    }\n\n                    const {isLeader} = this.state;\n                    if (isLeader) this.handleAccounts();\n                });\n        }, () => {\n            console.log(\"error\");\n        });\n    }\n\n    logout = () => {\n        logout();\n        this.props.history.push(\"/\");\n    };\n\n    handleMenu = () => {\n        api.get(\"/api/environments\")\n            .then(response =>\n                this.setState({environments: response.data})\n            );\n    };\n\n    handleAccounts = () => {\n        api.get(`/api/accountGroups/${getUser().group}`)\n            .then(response => {\n                    response.data.accounts.forEach(value => value[\"color\"] = red[500]);\n                    this.setState({\n                        accounts: response.data.accounts\n                    });\n\n                    this.handleCars(1);\n                    this.handleCars(2);\n                }\n            );\n    };\n\n    handleCars = (carIndex) => {\n        api.get(`/api/transports/getByIndex/${carIndex}/${getUser().group}`)\n            .then(response => {\n                    const {accounts} = this.state;\n                    const list = JSON.parse(JSON.stringify(accounts));\n                    const nextState = {};\n                    response.data.fromEnvironment = response.data.toEnvironment;\n                    response.data.toEnvironment = undefined;\n                    nextState[\"car\" + carIndex] = response.data;\n                    nextState[\"accounts\" + carIndex] = list\n                        .filter(a => a.environment.id === response.data.fromEnvironment.id);\n                    let tools = \"\";\n                    response.data.fromEnvironment.tools.forEach(t => tools += t.description + \"; \");\n                    nextState[\"tool\" + carIndex] = tools.trim();\n                    this.setState(nextState);\n                }\n            );\n    };\n\n    handleCurrentEnvironment = () => {\n        api.get(`/api/environments/getWithUserResponses`)\n            .then(response =>\n                this.setState({currentEnvironment: response.data})\n            );\n    };\n\n    handleTools = () => {\n        api.get(`/api/environments/getWithUserResponses`)\n            .then(response => {\n                const {currentEnvironment} = this.state;\n                currentEnvironment[\"tools\"] = response.data.tools;\n                this.setState(currentEnvironment);\n            });\n    };\n\n    handleMessages = () => {\n        api.get(`/api/chatMessages/getByEnvironmentId/${this.state.currentEnvironment.id}`)\n            .then(response =>\n                this.setState({chatMessages: response.data})\n            );\n\n        api.get(`/api/chatMessages/getByAccountGroup`)\n            .then(response =>\n                this.setState({chatMessagesAll: response.data})\n            );\n    };\n\n    handleOpenLeftMenu = () => {\n        this.setState({menuLeftOpen: true});\n    }\n\n    handleCloseLeftMenu = () => {\n        this.setState({menuLeftOpen: false});\n    }\n\n    handleOpenRightMenu = () => {\n        this.setState({\n            menuRightOpen: true,\n            newMessages: 0\n        });\n    }\n\n    handleCloseRightMenu = () => {\n        this.setState({menuRightOpen: false});\n    }\n\n    changeMessage = (e) => {\n        const nextState = {}\n        nextState[e.target.id] = e.target.value;\n        this.setState(nextState);\n    }\n\n    handleSendMessage = (isAll) => {\n        const {message, messageAll} = this.state;\n        const endpoint = isAll ? \"/all\" : \"\";\n        const msg = isAll ? messageAll : message;\n        if (msg !== \"\") {\n            api.post(\"/api/chatMessages\" + endpoint, {\n                \"text\": msg\n            }).then(() => {\n                if (isAll) {\n                    this.setState({\"messageAll\": \"\"});\n                    this.chatInputAll.current.focus();\n                } else {\n                    this.setState({\"message\": \"\"});\n                    this.chatInput.current.focus();\n                }\n            }).catch(err => console.log(err));\n        }\n    }\n\n    changeResponse = (e) => {\n        const value = e.target.value;\n        const name = e.target.id;\n        const index = name.substring(9);\n        const nextState = this.state[\"currentEnvironment\"];\n\n        if (!!nextState[\"questions\"][parseInt(index)][\"responses\"]) {\n            nextState[\"questions\"][parseInt(index)][\"responses\"] = [{\"text\": value}];\n        } else {\n            nextState[\"questions\"][parseInt(index)][\"responses\"][0][\"text\"] = value;\n        }\n\n        this.setState(nextState);\n    }\n\n    changeValue = (e) => {\n        const nextState = {};\n        nextState[e.target.id] = e.target.value;\n        this.setState(nextState);\n    }\n\n    selectAccount = (accountIndex, carNumber) => {\n        const nextState = this.state[\"accounts\" + carNumber];\n        if (nextState[accountIndex][\"color\"] === green[500]) {\n            nextState[accountIndex][\"color\"] = red[500];\n        } else {\n            nextState[accountIndex][\"color\"] = green[500];\n        }\n        this.setState(nextState);\n    }\n\n    handleCarGo = async (carNumber) => {\n        const car = this.state[\"car\" + carNumber];\n        const accounts = this.state[\"accounts\" + carNumber]\n            .filter(a => a.color === green[500])\n            .map(a => {\n                return {id: a.id}\n            });\n        const tools = this.state[\"tool\" + carNumber]\n            .split(\";\")\n            .filter(t => !!t)\n            .map(t => {\n                return {\n                    description: t,\n                    environment: !!car[\"toEnvironment\"] ? car[\"toEnvironment\"] : 0\n                }\n            });\n\n        if (accounts.length !== 0 && !!car[\"toEnvironment\"]) {\n            try {\n                await api.post(\"/api/transports\", {\n                    accountGroup: {id: getUser().group},\n                    carIndex: carNumber,\n                    accounts: accounts,\n                    tools: tools,\n                    toEnvironment: car[\"toEnvironment\"],\n                    fromEnvironment: car[\"fromEnvironment\"],\n                    timestamp: 1202020\n                });\n\n                const nextState = {};\n                nextState[\"tool\" + carNumber] = \"\";\n                this.setState(nextState);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    onChangeEnvironmentTo = (carNumber, value) => {\n        const nextState = this.state[\"car\" + carNumber];\n        nextState[\"toEnvironment\"] = value;\n        this.setState(nextState);\n    }\n\n    handleSendResponses = async () => {\n        const {currentEnvironment} = this.state;\n        const questions = currentEnvironment.questions;\n\n        questions.forEach(question => {\n            if (!!question.responses && question.responses.length > 0) {\n                const response = question.responses[0].text;\n\n                api.post(\"/api/responses\", {\n                    account: {id: getUser().id},\n                    text: response,\n                    question: {id: question.id}\n                }).catch(reason => {\n                    console.log(reason);\n                    alert(\"UM ERRO OCORREU! SALVE SUAS RESPOSTAS!\");\n                });\n            }\n        });\n    }\n\n    render() {\n        const {classes} = this.props;\n        const {\n            menuLeftOpen, menuRightOpen, environments, currentEnvironment,\n            message, chatMessages, newMessages, accounts1, accounts2,\n            car1, car2, tool1, tool2, isLeader, chatMessagesAll, messageAll\n        } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <CssBaseline/>\n                <AppBar position=\"absolute\" className={clsx(classes.appBar, menuLeftOpen && classes.appBarShift)}>\n                    <Toolbar className={classes.toolbar}>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={this.handleOpenLeftMenu}\n                            className={clsx(classes.menuButtonLeft, menuLeftOpen && classes.menuButtonHidden)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n                        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                            {currentEnvironment.name}\n                        </Typography>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={this.handleOpenRightMenu}\n                            className={clsx(classes.menuButtonRight, menuRightOpen && classes.menuButtonHidden)}\n                        >\n                            <Badge badgeContent={newMessages} color=\"secondary\">\n                                <NotificationsIcon/>\n                            </Badge>\n                        </IconButton>\n\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            onClick={this.logout}>\n                            <Badge color=\"secondary\">\n                                <ExitToApp/>\n                            </Badge>\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    variant=\"permanent\"\n                    classes={{\n                        paper: clsx(classes.drawerPaper, !menuLeftOpen && classes.drawerPaperClose),\n                    }}\n                    open={menuLeftOpen}\n                >\n                    <div className={classes.toolbarIcon}>\n                        <IconButton onClick={this.handleCloseLeftMenu}>\n                            <ChevronLeftIcon/>\n                        </IconButton>\n                    </div>\n                    <Divider/>\n                    <List>\n                        <div>\n                            {environments.map((value, index) => {\n                                return <ListItem button key={`menu-${value.id}`}>\n                                    <ListItemIcon>\n                                        {React.createElement(Icons[value.icon])}\n                                    </ListItemIcon>\n                                    <ListItemText primary={value.name}/>\n                                </ListItem>\n                            })}\n                        </div>\n                    </List>\n                </Drawer>\n                <SwipeableDrawer\n                    anchor=\"right\"\n                    onClose={this.handleCloseRightMenu}\n                    onOpen={this.handleOpenRightMenu}\n                    open={menuRightOpen}\n                >\n                    <div className={classes.toolbarIconRight}>\n                        <IconButton onClick={this.handleCloseRightMenu}>\n                            <ChevronRightIcon/>\n                        </IconButton>\n                    </div>\n                    <Divider/>\n                    <List>\n                        <div className={classes.rightMenu}>\n                            <h3>Mensagens com que está no(a) {currentEnvironment.name}:</h3>\n                            <div className={classes.chatMessages}>\n                                {chatMessages.map((value, index) => {\n                                    return <div key={`chatMessages-${value.id}`}>\n                                        <span className={classes.chatMessageAccount}>\n                                            {value.account.name}: &nbsp;\n                                        </span>\n                                        <span dangerouslySetInnerHTML={{__html: value.text}}/>\n                                    </div>\n                                })}\n                            </div>\n                            <form className={classes.chatForm} noValidate>\n                                <TextField\n                                    inputRef={this.chatInput}\n                                    className={classes.chatInput}\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    multiline\n                                    inputProps={{maxLength: 2048}}\n                                    rowsMax={4}\n                                    fullWidth\n                                    name=\"message\"\n                                    type=\"text\"\n                                    id=\"message\"\n                                    value={message}\n                                    onChange={this.changeMessage}\n                                />\n                                <IconButton color=\"primary\" aria-label=\"Enviar\"\n                                            onClick={() => this.handleSendMessage(false)}>\n                                    <Send/>\n                                </IconButton>\n                            </form>\n\n                            <h3>Mensagens entre todos:</h3>\n                            <div className={classes.chatMessages}>\n                                {chatMessagesAll.map((value, index) => {\n                                    return <div key={`chatMessages-${value.id}`}>\n                                        <span className={classes.chatMessageAccount}>\n                                            {value.account.name}: &nbsp;\n                                        </span>\n                                        <span dangerouslySetInnerHTML={{__html: value.text}}/>\n                                    </div>\n                                })}\n                            </div>\n                            <form className={classes.chatForm} noValidate>\n                                <TextField\n                                    inputRef={this.chatInputAll}\n                                    className={classes.chatInput}\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    multiline\n                                    inputProps={{maxLength: 2048}}\n                                    rowsMax={4}\n                                    fullWidth\n                                    name=\"messageAll\"\n                                    type=\"text\"\n                                    id=\"messageAll\"\n                                    value={messageAll}\n                                    onChange={this.changeMessage}\n                                />\n                                <IconButton color=\"primary\" aria-label=\"Enviar\"\n                                            onClick={() => this.handleSendMessage(true)}>\n                                    <Send/>\n                                </IconButton>\n                            </form>\n                        </div>\n                        <Divider/>\n                    </List>\n                </SwipeableDrawer>\n                <main className={classes.content}>\n                    <div className={classes.appBarSpacer}/>\n                    <Container maxWidth=\"lg\" className={classes.container}>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12}>\n                                <Paper className={classes.paper}>\n                                    <h3>\n                                        <p dangerouslySetInnerHTML={{__html: currentEnvironment.description}}/>\n                                    </h3>\n\n                                    <Divider/>\n                                    <form className={classes.form} noValidate>\n                                        {currentEnvironment.questions.map((value, index) => {\n                                            return <div key={`div-question-${value.id}`}>\n                                                <h4 key={`question-${value.id}`}>\n                                                    <p dangerouslySetInnerHTML={{__html: value.description}}/>\n                                                </h4>\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    fullWidth\n                                                    name={`response-${index}`}\n                                                    label=\"Resposta\"\n                                                    multiline\n                                                    type=\"text\"\n                                                    inputProps={{maxLength: 1024}}\n                                                    rowsMax={4}\n                                                    key={`response-${index}`}\n                                                    id={`response-${index}`}\n                                                    value={value.responses.length === 0 ? \"\" : value.responses[0].text}\n                                                    onChange={this.changeResponse}\n                                                />\n                                            </div>;\n                                        })}\n\n                                        {currentEnvironment.questions.length > 0 && <Button\n                                            type=\"button\"\n                                            fullWidth\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.submit}\n                                            onClick={this.handleSendResponses}\n                                        >\n                                            Enviar\n                                        </Button>}\n                                    </form>\n\n                                    <Divider/>\n                                    <div className={classes.toolsDiv}>\n                                        {currentEnvironment.tools.map((value, index) => {\n                                            return <Box component=\"div\" display=\"inline-block\" p={1} m={1}\n                                                        className={classes.tools}\n                                                        key={`tool-description-${value.id}`}>\n                                                {value.description}\n                                            </Box>;\n                                        })}\n                                    </div>\n                                </Paper>\n\n                                {isLeader && <Grid justify=\"space-between\" container spacing={2}>\n                                    <Grid item xs={6} className={classes.carGrid}>\n                                        <Paper className={classes.paper}>\n                                            <h3>Carro 1 está no(a) {car1.fromEnvironment.name}</h3>\n                                            <Divider/>\n\n                                            {accounts1.map((value, index) => {\n                                                return <ListItem button key={`account1-${value.id}`}\n                                                                 onClick={() => this.selectAccount(index, 1)}>\n                                                    <ListItemIcon>\n                                                        <Adjust style={{color: value.color}}/>\n                                                    </ListItemIcon>\n                                                    <ListItemText primary={value.name}/>\n                                                </ListItem>\n                                            })}\n                                            <Divider/>\n                                            <TextField\n                                                variant=\"outlined\"\n                                                margin=\"normal\"\n                                                fullWidth\n                                                name=\"tool1\"\n                                                label=\"Ferramentas\"\n                                                multiline\n                                                type=\"text\"\n                                                rowsMax={8}\n                                                key=\"tool1\"\n                                                id=\"tool1\"\n                                                value={tool1}\n                                                onChange={this.changeValue}\n                                            />\n                                            <Autocomplete\n                                                options={environments.filter(e => e.id !== car1.fromEnvironment.id)}\n                                                fullWidth\n                                                renderOption={(option) => (\n                                                    <React.Fragment>\n                                                        {React.createElement(Icons[option.icon])}\n                                                        {option.name}\n                                                    </React.Fragment>\n                                                )}\n                                                value={car1.toEnvironment}\n                                                onChange={(event, value) => this.onChangeEnvironmentTo(1, value)}\n                                                getOptionLabel={(option) => option.name}\n                                                renderInput={(params) =>\n                                                    <TextField {...params} label=\"Indo para\" variant=\"outlined\"\n                                                               inputProps={{...params.inputProps}}/>}\n                                            />\n\n                                            <IconButton color=\"primary\" aria-label=\"Ir\" className={classes.carButton}\n                                                        onClick={() => this.handleCarGo(1)}>\n                                                <Send/>\n                                            </IconButton>\n                                        </Paper>\n                                    </Grid>\n                                    <Grid item xs={6} className={classes.carGrid}>\n                                        <Paper className={classes.paper}>\n                                            <h3>Carro 2 está no(a) {car2.fromEnvironment.name}</h3>\n                                            <Divider/>\n\n                                            {accounts2.map((value, index) => {\n                                                return <ListItem button key={`account2-${value.id}`}\n                                                                 onClick={() => this.selectAccount(index, 2)}>\n                                                    <ListItemIcon>\n                                                        <Adjust style={{color: value.color}}/>\n                                                    </ListItemIcon>\n                                                    <ListItemText primary={value.name}/>\n                                                </ListItem>\n                                            })}\n                                            <Divider/>\n                                            <TextField\n                                                variant=\"outlined\"\n                                                margin=\"normal\"\n                                                fullWidth\n                                                name=\"tool2\"\n                                                label=\"Ferramentas\"\n                                                multiline\n                                                type=\"text\"\n                                                rowsMax={8}\n                                                key=\"tool2\"\n                                                id=\"tool2\"\n                                                value={tool2}\n                                                onChange={this.changeValue}\n                                            />\n\n                                            <Autocomplete\n                                                options={environments.filter(e => e.id !== car2.fromEnvironment.id)}\n                                                fullWidth\n                                                renderOption={(option) => (\n                                                    <React.Fragment>\n                                                        {React.createElement(Icons[option.icon])}\n                                                        {option.name}\n                                                    </React.Fragment>\n                                                )}\n                                                value={car2.toEnvironment}\n                                                onChange={(event, value) => this.onChangeEnvironmentTo(2, value)}\n                                                getOptionLabel={(option) => option.name}\n                                                renderInput={(params) =>\n                                                    <TextField {...params} label=\"Indo para\" variant=\"outlined\"\n                                                               inputProps={{...params.inputProps}}/>}\n                                            />\n\n                                            <IconButton color=\"primary\" aria-label=\"Ir\" className={classes.carButton}\n                                                        onClick={() => this.handleCarGo(2)}>\n                                                <Send/>\n                                            </IconButton>\n                                        </Paper>\n                                    </Grid>\n                                </Grid>}\n                            </Grid>\n                        </Grid>\n                        <Box pt={4}>\n                            <Copyright/>\n                        </Box>\n                    </Container>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(Styles)(Home)\n","import React from \"react\";\nimport {HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\nimport SignUp from \"./pages/signup\";\nimport SignIn from \"./pages/signin\";\nimport Home from \"./pages/home\";\n\n\nimport {isAuthenticated} from \"./services/auth\";\n\nconst PrivateRoute = ({component: Component, ...rest}) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuthenticated() ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to={{pathname: \"/\", state: {from: props.location}}}/>\n            )\n        }\n    />\n);\n\nconst Routes = () => (\n    <HashRouter basename=\"/radioactive-game-web\">\n        <Switch>\n            <Route exact path=\"/\" component={SignIn}/>\n            <Route path=\"/signup\" component={SignUp}/>\n            <PrivateRoute path=\"/app\" component={Home}/>\n            <Route path=\"*\" component={() => <h1>Page not found</h1>}/>\n        </Switch>\n    </HashRouter>\n);\n\nexport default Routes;","import React from \"react\";\nimport \"./styles/global\";\nimport Routes from \"./routes\";\n\nconst App = () => <Routes />;\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}