{"version":3,"sources":["styles/global.js","assets/nuclear.svg","utils/form/index.js","services/auth.js","services/api.js","utils/app/index.js","pages/signup/index.js","pages/signup/styles.js","pages/signin/index.js","pages/signin/styles.js","pages/home/styles.js","pages/home/index.js","pages/report/index.js","pages/report/styles.js","pages/reportOrdered/index.js","pages/reportOrdered/styles.js","pages/accountgroup/index.js","pages/accountgroup/styles.js","routes.js","App.js","index.js"],"names":["createGlobalStyle","validate","validation","value","i","length","error","validateFields","fields","keys","Object","key","validateForm","isRequired","TOKEN_KEY","TOKEN_EXPIRES_AT","PASSWORD","getToken","localStorage","getItem","saveLoginResponse","token","password","decodedToken","jwt","setItem","exp","toString","refreshLogin","a","user","getUser","login","email","api","post","response","headers","authorization","id","parseInt","sub","aud","name","environment","group","isLeader","axios","create","baseURL","interceptors","request","use","config","Authorization","Copyright","Typography","variant","color","align","Date","getFullYear","SignIn","state","changeValue","e","target","nextState","setState","handleSignUp","preventDefault","updatedFields","props","history","push","console","log","classes","this","Container","component","maxWidth","CssBaseline","className","paper","src","Logo","alt","logo","form","noValidate","onSubmit","TextField","margin","required","fullWidth","label","autoComplete","autoFocus","helperText","onChange","type","Button","submit","Box","mt","Component","withStyles","theme","marginTop","spacing","display","flexDirection","alignItems","width","height","backgroundColor","handleSignIn","Grid","container","signup","item","Link","href","textAlign","drawerWidth","Home","message","messageAll","menuLeftOpen","menuRightOpen","alertOpen","environments","currentEnvironment","questions","description","responses","tools","chatMessages","chatMessagesAll","newMessages","accounts1","accounts2","car1","fromEnvironment","toEnvironment","car2","tool1","tool2","logout","removeItem","handleMenu","get","then","data","handleAccounts","accounts","forEach","red","handleCars","carIndex","list","JSON","parse","stringify","undefined","filter","t","trim","handleCurrentEnvironment","handleTools","handleMessages","handleOpenLeftMenu","handleCloseLeftMenu","handleOpenRightMenu","handleCloseRightMenu","changeMessage","handleSendMessage","isAll","endpoint","msg","chatInputAll","current","focus","chatInput","catch","err","changeResponse","index","substring","selectAccount","accountIndex","carNumber","green","handleCarGo","car","map","split","accountGroup","timestamp","onChangeEnvironmentTo","handleSendResponses","question","text","account","reason","alert","handleCloseAlert","event","React","createRef","stompClient","Stomp","over","SockJS","transports","connect","subscribe","body","numberOfNewMessages","concat","transport","root","AppBar","position","clsx","appBar","appBarShift","Toolbar","toolbar","IconButton","edge","aria-label","onClick","menuButtonLeft","menuButtonHidden","noWrap","title","menuButtonRight","Badge","badgeContent","ExitToApp","Drawer","drawerPaper","drawerPaperClose","open","toolbarIcon","Divider","List","ListItem","button","ListItemIcon","createElement","Icons","icon","ListItemText","primary","SwipeableDrawer","anchor","onClose","onOpen","toolbarIconRight","rightMenu","chatMessageAccount","dangerouslySetInnerHTML","__html","chatForm","inputRef","multiline","inputProps","maxLength","rowsMax","Send","content","appBarSpacer","xs","Paper","Snackbar","autoHideDuration","Alert","severity","toolsDiv","p","m","justify","carGrid","Adjust","style","Autocomplete","options","renderOption","option","Fragment","getOptionLabel","renderInput","params","carButton","pt","paddingRight","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","marginRight","flexGrow","whiteSpace","overflowX","breakpoints","up","overflow","paddingTop","paddingBottom","minHeight","fixedHeight","overflowY","border","alignSelf","fontWeight","Report","ags","handleAccountGroups","handleReport","handleSetReport","formatDate","ts","dt","Moment","format","formatHour","hours","Math","floor","minutes","slice","report","ag","ra","raI","startTime","endTime","eI","q","qI","r","rI","messages","mI","events","evI","transportDiv","span","from","to","reduce","result","dividerAG","background","borderRadius","paddingLeft","ReportOrdered","flat","sort","b","compare","AccountGroup","selected","save","nameTrim","focused","number","multiple","PrivateRoute","rest","render","getTime","pathname","location","Routes","basename","exact","path","SignUp","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.227b6d8f.chunk.js","sourcesContent":["import {createGlobalStyle} from \"styled-components\";\n\nimport \"font-awesome/css/font-awesome.css\";\n\ncreateGlobalStyle`\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n  outline: 0;\n}\nbody, html {\n  background: #eee;\n  font-family: 'Helvetica Neue', 'Helvetica', Arial, sans-serif;\n  text-rendering: optimizeLegibility !important;\n  -webkit-font-smoothing: antialiased !important;\n  height: 100%;\n  width: 100%;\n}\n`;","export default __webpack_public_path__ + \"static/media/nuclear.272c3b9e.svg\";","export const validate = (validation, value) => {\n    for (let i = 0; i < validation.length; i++) {\n        let error = validation[i](value);\n        if (error !== \"\") {\n            return error;\n        }\n    }\n\n    return \"\";\n};\n\nexport const validateFields = (fields) => {\n    const keys = Object.keys(fields);\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let validation = fields[key][\"validation\"];\n        let value = fields[key][\"value\"];\n\n        fields[key][\"error\"] = validate(validation, value);\n    }\n\n    return fields;\n};\n\nexport const validateForm = (fields) => {\n    const keys = Object.keys(fields);\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        if (fields[key][\"error\"] !== \"\") return false;\n    }\n\n    return true;\n};\n\nexport const resetForm = (fields) => {\n    const keys = Object.keys(fields);\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        fields[key][\"value\"] = \"\";\n    }\n\n    return fields;\n};\n\nexport const isRequired = (value) => {\n    return !value ? \"Preencha para continuar!\" : \"\";\n};\n","import jwt from \"jwt-decode\"\nimport api from \"./api\";\n\nexport const TOKEN_KEY = \"TOKEN_KEY\";\nexport const TOKEN_EXPIRES_AT = \"TOKEN_EXPIRES_AT\";\nexport const PASSWORD = \"PASSWORD\";\nexport const isAuthenticated = () => {\n    return localStorage.getItem(TOKEN_KEY) !== null &&\n        new Date().getTime() / 1000 < parseInt(localStorage.getItem(TOKEN_EXPIRES_AT));\n};\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\nexport const saveLoginResponse = (token, password) => {\n    const decodedToken = jwt(token);\n    localStorage.setItem(TOKEN_KEY, token);\n    localStorage.setItem(PASSWORD, password);\n    localStorage.setItem(TOKEN_EXPIRES_AT, decodedToken.exp.toString());\n};\nexport const refreshLogin = async () => {\n    const user = getUser();\n    await login(user.email, user.password);\n};\nexport const login = async (email, password) => {\n    const response = await api.post(\"/login\", {\n        \"email\": email,\n        \"password\": password\n    });\n    saveLoginResponse(response.headers.authorization, password);\n};\nexport const logout = () => {\n    localStorage.removeItem(TOKEN_KEY);\n    localStorage.removeItem(TOKEN_EXPIRES_AT);\n};\nexport const getUser = () => {\n    const decodedToken = jwt(localStorage.getItem(TOKEN_KEY));\n    return {\n        id: parseInt(decodedToken.sub),\n        email: decodedToken.aud,\n        name: decodedToken.user,\n        environment: decodedToken.environment,\n        group: decodedToken.group,\n        isLeader: decodedToken.isLeader,\n        password: localStorage.getItem(PASSWORD)\n    }\n};","import axios from \"axios\";\nimport {getToken} from \"./auth\";\nimport SockJS from \"sockjs-client\";\n\nexport const api = axios.create({\n    baseURL: \"https://radioactive-game.herokuapp.com\"\n});\n\nexport const wsClient = () => {\n    return new SockJS(\"https://radioactive-game.herokuapp.com/gs-websocket\",\n        null,\n        {transports: ['xhr-streaming'], headers: {'Authorization': `Bearer ${getToken()}`}});\n}\n\napi.interceptors.request.use(async config => {\n    const token = getToken();\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n});\n\nexport default api;","import {Typography} from \"@material-ui/core\";\nimport React from \"react\";\n\nexport const Copyright = () => {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {\"Copyright © \" + new Date().getFullYear()}\n        </Typography>\n    );\n}","import React, {Component} from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {Styles} from \"./styles\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {Box, Button, Container} from \"@material-ui/core\";\nimport Logo from \"../../assets/nuclear.svg\"\nimport {isRequired, validate, validateFields, validateForm} from \"../../utils/form\";\nimport api from \"../../services/api\";\nimport {Copyright} from \"../../utils/app\";\n\nclass SignIn extends Component {\n    state = {\n        fields: {\n            name: {\n                value: \"\",\n                error: \"\",\n                validation: [isRequired]\n            },\n            email: {\n                value: \"\",\n                error: \"\",\n                validation: [isRequired]\n            },\n            password: {\n                value: \"\",\n                error: \"\",\n                validation: [isRequired]\n            }\n        }\n    };\n\n    changeValue = (e) => {\n        const value = e.target.value;\n        const name = e.target.id;\n        const nextState = this.state[\"fields\"];\n\n        nextState[name][\"value\"] = value;\n        nextState[name][\"error\"] = validate(nextState[name][\"validation\"], value);\n        this.setState(nextState);\n    }\n\n    handleSignUp = async e => {\n        e.preventDefault();\n        const {fields} = this.state;\n\n        const updatedFields = validateFields(fields);\n        if (validateForm(updatedFields)) {\n            try {\n                await api.post(\"/api/accounts\", {\n                    \"name\": fields.name.value,\n                    \"email\": fields.email.value,\n                    \"number\": fields.password.value,\n                    \"password\": fields.password.value,\n                    \"environment\": {\n                        \"id\": 1\n                    },\n                    \"isLeader\": false\n                });\n                // this.setState(resetForm(fields));\n                this.props.history.push(\"/\")\n            } catch (err) {\n                console.log(err);\n            }\n        } else {\n            this.setState(updatedFields);\n        }\n    };\n\n    render() {\n        const {classes} = this.props;\n        const {fields} = this.state;\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline/>\n                <div className={classes.paper}>\n                    <img src={Logo} alt=\"Logo\" className={classes.logo}/>\n                    <form className={classes.form} noValidate onSubmit={this.handleSignUp}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"name\"\n                            label=\"Nome\"\n                            name=\"name\"\n                            autoComplete=\"Nome\"\n                            autoFocus\n                            value={fields.name.value}\n                            error={fields.name.error !== \"\"}\n                            helperText={fields.name.error}\n                            onChange={this.changeValue}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"E-mail\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            value={fields.email.value}\n                            error={fields.email.error !== \"\"}\n                            helperText={fields.email.error}\n                            onChange={this.changeValue}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"RA\"\n                            type=\"text\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            value={fields.password.value}\n                            error={fields.password.error !== \"\"}\n                            helperText={fields.password.error}\n                            onChange={this.changeValue}\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Cadastrar\n                        </Button>\n                    </form>\n                </div>\n                <Box mt={8}>\n                    <Copyright/>\n                </Box>\n            </Container>\n        );\n    }\n}\n\nexport default withStyles(Styles)(SignIn)\n\n","export const Styles = theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    logo: {\n        margin: theme.spacing(1),\n        width: \"120px\",\n        height: \"120px\",\n        backgroundColor: \"transparent\",\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});","import React, {Component} from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {Styles} from \"./styles\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {Box, Button, Container, Link} from \"@material-ui/core\";\nimport Logo from \"../../assets/nuclear.svg\"\nimport {isRequired, validate, validateFields, validateForm} from \"../../utils/form\";\nimport {login} from \"../../services/auth\";\nimport {Copyright} from \"../../utils/app\";\nimport Grid from \"@material-ui/core/Grid\";\n\nclass SignIn extends Component {\n    state = {\n        fields: {\n            email: {\n                value: \"\",\n                error: \"\",\n                validation: [isRequired]\n            },\n            password: {\n                value: \"\",\n                error: \"\",\n                validation: [isRequired]\n            }\n        }\n    };\n\n    changeValue = (e) => {\n        const value = e.target.value;\n        const name = e.target.id;\n        const nextState = this.state[\"fields\"];\n\n        nextState[name][\"value\"] = value;\n        nextState[name][\"error\"] = validate(nextState[name][\"validation\"], value);\n        this.setState(nextState);\n    }\n\n    handleSignIn = async e => {\n        e.preventDefault();\n        const {fields} = this.state;\n\n        const updatedFields = validateFields(fields);\n        if (validateForm(updatedFields)) {\n            try {\n                await login(fields.email.value, fields.password.value);\n                this.props.history.push(\"/app\");\n            } catch (err) {\n                fields.email.error = \"E-mail ou Senha inválidos.\"\n                fields.password.error = \"E-mail ou Senha inválidos.\"\n                this.setState(fields);\n            }\n        } else {\n            this.setState(updatedFields);\n        }\n    };\n\n    render() {\n        const {classes} = this.props;\n        const {fields} = this.state;\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline/>\n                <div className={classes.paper}>\n                    <img src={Logo} alt=\"Logo\" className={classes.logo}/>\n                    <form className={classes.form} noValidate onSubmit={this.handleSignIn}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"E-mail\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            value={fields.email.value}\n                            error={fields.email.error !== \"\"}\n                            helperText={fields.email.error}\n                            onChange={this.changeValue}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Senha\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            value={fields.password.value}\n                            error={fields.password.error !== \"\"}\n                            helperText={fields.password.error}\n                            onChange={this.changeValue}\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Entrar\n                        </Button>\n                        <Grid container className={classes.signup}>\n                            <Grid item>\n                                <Link href=\"#/signup\" variant=\"body2\">\n                                    {\"Cadastre-se\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n                <Box mt={8}>\n                    <Copyright/>\n                </Box>\n            </Container>\n        );\n    }\n}\n\nexport default withStyles(Styles)(SignIn)\n\n","export const Styles = theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    logo: {\n        margin: theme.spacing(1),\n        width: \"120px\",\n        height: \"120px\",\n        backgroundColor: \"transparent\",\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    signup: {\n        flexDirection: \"column\",\n        textAlign: \"center\"\n    }\n});","const drawerWidth = 350;\n\nexport const Styles = theme => ({\n    root: {\n        display: \"flex\",\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: \"0 8px\",\n        ...theme.mixins.toolbar,\n    },\n    toolbarIconRight: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        padding: \"0 8px\",\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButtonLeft: {\n        marginRight: 36,\n    },\n    menuButtonRight: {\n        marginLeft: 36,\n    },\n    menuButtonHidden: {\n        display: \"none\",\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: \"relative\",\n        whiteSpace: \"nowrap\",\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: \"hidden\",\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: \"100vh\",\n        overflow: \"auto\",\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: \"flex\",\n        overflow: \"auto\",\n        flexDirection: \"column\",\n        minHeight: 540,\n    },\n    fixedHeight: {\n        height: 240,\n    },\n    rightMenu: {\n        width: drawerWidth,\n        marginLeft: \"10px\",\n        marginRight: \"10px\",\n    },\n    chatMessages: {\n        height: \"250px\",\n        overflowY: \"auto\",\n        border: \"1px solid black\"\n    },\n    chatForm: {\n        display: \"flex\",\n        flexDirection: \"row\"\n    },\n    chatInput: {\n        alignSelf: \"flex-end\"\n    },\n    chatMessageAccount: {\n        fontWeight: \"bold\"\n    },\n    carGrid: {\n        marginTop: \"20px\"\n    },\n    carButton:{\n        width: \"50px\",\n        alignSelf: \"flex-end\"\n    },\n    toolsDiv:{\n        marginTop: \"15px\",\n    },\n    tools: {\n        backgroundColor: \"#3f51b5\",\n        color: \"white\"\n    }\n});","import React, {Component} from \"react\";\nimport clsx from \"clsx\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport {Badge, Button, List, ListItemText, Snackbar, SwipeableDrawer, TextField, withStyles} from \"@material-ui/core\";\nimport {Alert, Autocomplete} from \"@material-ui/lab\";\nimport {Copyright} from \"../../utils/app\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport * as Icons from \"@material-ui/icons\";\nimport {Adjust, ExitToApp, Send} from \"@material-ui/icons\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport {Styles} from \"./styles\";\nimport Stomp from 'stompjs';\nimport {api, wsClient} from \"../../services/api\";\nimport {getUser, logout, refreshLogin} from \"../../services/auth\";\nimport {green, red} from \"@material-ui/core/colors\";\n\nclass Home extends Component {\n    state = {\n        message: \"\",\n        messageAll: \"\",\n        menuLeftOpen: false,\n        menuRightOpen: false,\n        alertOpen: false,\n        environments: [],\n        currentEnvironment: {\n            id: getUser().environment,\n            questions: [{\n                id: 0,\n                description: \"\",\n                responses: []\n            }],\n            tools: []\n        },\n        chatMessages: [],\n        chatMessagesAll: [],\n        newMessages: 0,\n        accounts1: [],\n        accounts2: [],\n        car1: {\n            fromEnvironment: {\n                id: 1,\n                name: \"\"\n            },\n            toEnvironment: {\n                id: 1,\n                name: \"\"\n            }\n        },\n        car2: {\n            fromEnvironment: {\n                id: 1,\n                name: \"\"\n            },\n            toEnvironment: {\n                id: 1,\n                name: \"\"\n            }\n        },\n        tool1: \"\",\n        tool2: \"\",\n        isLeader: getUser().isLeader\n    };\n\n    constructor(props) {\n        super(props);\n        this.chatInput = React.createRef();\n        this.chatInputAll = React.createRef();\n    }\n\n    async componentDidMount() {\n        await refreshLogin();\n        this.handleMenu();\n        this.handleCurrentEnvironment();\n        this.handleMessages();\n        this.handleAccounts();\n\n        const stompClient = Stomp.over(wsClient());\n        const user = getUser();\n        stompClient.connect({}, () => {\n            stompClient.subscribe(`/topic/messages/${user.group}`,\n                (response) => {\n                    const {currentEnvironment, newMessages, menuRightOpen} = this.state;\n                    const nextState = this.state;\n                    const message = JSON.parse(response.body);\n                    const user = getUser();\n\n                    let numberOfNewMessages = newMessages;\n                    if (menuRightOpen) {\n                        numberOfNewMessages = 0;\n                    } else if (message.account.id !== user.id) {\n                        numberOfNewMessages++;\n                    }\n\n                    if (!message.environment) {\n                        nextState[\"chatMessagesAll\"] = nextState[\"chatMessagesAll\"].concat(message);\n                    } else if (message.environment.id === currentEnvironment.id) {\n                        nextState[\"chatMessages\"] = nextState[\"chatMessages\"].concat(message);\n                    } else {\n                        numberOfNewMessages = newMessages;\n                    }\n                    nextState[\"newMessages\"] = numberOfNewMessages;\n                    this.setState(nextState);\n                });\n\n            stompClient.subscribe(`/topic/transport/${user.group}`,\n                response => {\n                    const transport = JSON.parse(response.body);\n                    const user = getUser();\n                    if (transport.accounts.filter(a => a.id === user.id).length === 1) {\n                        refreshLogin().then(() => {\n                            const nextState = this.state[\"currentEnvironment\"];\n                            nextState[\"id\"] = getUser().environment;\n                            this.setState(nextState);\n                            this.handleCurrentEnvironment();\n                            this.handleMessages();\n                        });\n                    } else {\n                        this.handleTools();\n                    }\n\n                    const {isLeader} = this.state;\n                    if (isLeader) this.handleAccounts();\n                });\n        }, () => {\n            console.log(\"error\");\n        });\n    }\n\n    logout = () => {\n        logout();\n        this.props.history.push(\"/\");\n    };\n\n    handleMenu = () => {\n        api.get(\"/api/environments\")\n            .then(response =>\n                this.setState({environments: response.data})\n            );\n    };\n\n    handleAccounts = () => {\n        api.get(`/api/accountGroups/${getUser().group}`)\n            .then(response => {\n                    response.data.accounts.forEach(value => value[\"color\"] = red[500]);\n                    this.setState({\n                        accounts: response.data.accounts\n                    });\n\n                    this.handleCars(1);\n                    this.handleCars(2);\n                }\n            );\n    };\n\n    handleCars = (carIndex) => {\n        api.get(`/api/transports/getByIndex/${carIndex}/${getUser().group}`)\n            .then(response => {\n                    const {accounts} = this.state;\n                    const list = JSON.parse(JSON.stringify(accounts));\n                    const nextState = {};\n                    response.data.fromEnvironment = response.data.toEnvironment;\n                    response.data.toEnvironment = undefined;\n                    nextState[\"car\" + carIndex] = response.data;\n                    nextState[\"accounts\" + carIndex] = list\n                        .filter(a => a.environment.id === response.data.fromEnvironment.id);\n                    let tools = \"\";\n                    response.data.fromEnvironment.tools.forEach(t => tools += t.description + \"; \");\n                    nextState[\"tool\" + carIndex] = tools.trim();\n                    this.setState(nextState);\n                }\n            );\n    };\n\n    handleCurrentEnvironment = () => {\n        api.get(`/api/environments/getWithUserResponses`)\n            .then(response =>\n                this.setState({currentEnvironment: response.data})\n            );\n    };\n\n    handleTools = () => {\n        api.get(`/api/environments/getWithUserResponses`)\n            .then(response => {\n                const {currentEnvironment} = this.state;\n                currentEnvironment[\"tools\"] = response.data.tools;\n                this.setState(currentEnvironment);\n            });\n    };\n\n    handleMessages = () => {\n        api.get(`/api/chatMessages/getByEnvironmentId/${this.state.currentEnvironment.id}`)\n            .then(response =>\n                this.setState({chatMessages: response.data})\n            );\n\n        api.get(`/api/chatMessages/getByAccountGroup`)\n            .then(response =>\n                this.setState({chatMessagesAll: response.data})\n            );\n    };\n\n    handleOpenLeftMenu = () => {\n        this.setState({menuLeftOpen: true});\n    }\n\n    handleCloseLeftMenu = () => {\n        this.setState({menuLeftOpen: false});\n    }\n\n    handleOpenRightMenu = () => {\n        this.setState({\n            menuRightOpen: true,\n            newMessages: 0\n        });\n    }\n\n    handleCloseRightMenu = () => {\n        this.setState({menuRightOpen: false});\n    }\n\n    changeMessage = (e) => {\n        const nextState = {}\n        nextState[e.target.id] = e.target.value;\n        this.setState(nextState);\n    }\n\n    handleSendMessage = (isAll) => {\n        const {message, messageAll} = this.state;\n        const endpoint = isAll ? \"/all\" : \"\";\n        const msg = isAll ? messageAll : message;\n        if (msg !== \"\") {\n            api.post(\"/api/chatMessages\" + endpoint, {\n                \"text\": msg\n            }).then(() => {\n                if (isAll) {\n                    this.setState({\"messageAll\": \"\"});\n                    this.chatInputAll.current.focus();\n                } else {\n                    this.setState({\"message\": \"\"});\n                    this.chatInput.current.focus();\n                }\n            }).catch(err => console.log(err));\n        }\n    }\n\n    changeResponse = (e) => {\n        const value = e.target.value;\n        const name = e.target.id;\n        const index = name.substring(9);\n        const nextState = this.state[\"currentEnvironment\"];\n\n        if (!!nextState[\"questions\"][parseInt(index)][\"responses\"]) {\n            nextState[\"questions\"][parseInt(index)][\"responses\"] = [{\"text\": value}];\n        } else {\n            nextState[\"questions\"][parseInt(index)][\"responses\"][0][\"text\"] = value;\n        }\n\n        this.setState(nextState);\n    }\n\n    changeValue = (e) => {\n        const nextState = {};\n        nextState[e.target.id] = e.target.value;\n        this.setState(nextState);\n    }\n\n    selectAccount = (accountIndex, carNumber) => {\n        const nextState = this.state[\"accounts\" + carNumber];\n        if (nextState[accountIndex][\"color\"] === green[500]) {\n            nextState[accountIndex][\"color\"] = red[500];\n        } else {\n            nextState[accountIndex][\"color\"] = green[500];\n        }\n        this.setState(nextState);\n    }\n\n    handleCarGo = async (carNumber) => {\n        const car = this.state[\"car\" + carNumber];\n        const accounts = this.state[\"accounts\" + carNumber]\n            .filter(a => a.color === green[500])\n            .map(a => {\n                return {id: a.id}\n            });\n        const tools = this.state[\"tool\" + carNumber]\n            .split(\";\")\n            .filter(t => !!t)\n            .map(t => {\n                return {\n                    description: t,\n                    environment: !!car[\"toEnvironment\"] ? car[\"toEnvironment\"] : 0\n                }\n            });\n\n        if (accounts.length !== 0 && !!car[\"toEnvironment\"]) {\n            try {\n                await api.post(\"/api/transports\", {\n                    accountGroup: {id: getUser().group},\n                    carIndex: carNumber,\n                    accounts: accounts,\n                    tools: tools,\n                    toEnvironment: car[\"toEnvironment\"],\n                    fromEnvironment: car[\"fromEnvironment\"],\n                    timestamp: 1202020\n                });\n\n                const nextState = {};\n                nextState[\"tool\" + carNumber] = \"\";\n                this.setState(nextState);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    onChangeEnvironmentTo = (carNumber, value) => {\n        const nextState = this.state[\"car\" + carNumber];\n        nextState[\"toEnvironment\"] = value;\n        this.setState(nextState);\n    }\n\n    handleSendResponses = async () => {\n        const {currentEnvironment} = this.state;\n        const questions = currentEnvironment.questions;\n\n        questions.forEach(question => {\n            if (!!question.responses && question.responses.length > 0) {\n                const response = question.responses[0].text.trim();\n\n                if (response.length > 0) {\n                    api.post(\"/api/responses\", {\n                        account: {id: getUser().id},\n                        text: response,\n                        question: {id: question.id}\n                    })\n                        .then(() => this.setState({alertOpen: true}))\n                        .catch(reason => {\n                            console.log(reason);\n                            alert(\"UM ERRO OCORREU! SALVE SUAS RESPOSTAS!\");\n                        });\n                }\n            }\n        });\n    }\n\n    handleCloseAlert = (event, reason) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n\n        this.setState({alertOpen: false});\n    };\n\n    render() {\n        const {classes} = this.props;\n        const {\n            menuLeftOpen, menuRightOpen, environments, currentEnvironment,\n            message, chatMessages, newMessages, accounts1, accounts2, alertOpen,\n            car1, car2, tool1, tool2, isLeader, chatMessagesAll, messageAll\n        } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <CssBaseline/>\n                <AppBar position=\"absolute\" className={clsx(classes.appBar, menuLeftOpen && classes.appBarShift)}>\n                    <Toolbar className={classes.toolbar}>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={this.handleOpenLeftMenu}\n                            className={clsx(classes.menuButtonLeft, menuLeftOpen && classes.menuButtonHidden)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n                        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                            {currentEnvironment.name}\n                        </Typography>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={this.handleOpenRightMenu}\n                            className={clsx(classes.menuButtonRight, menuRightOpen && classes.menuButtonHidden)}\n                        >\n                            <Badge badgeContent={newMessages} color=\"secondary\">\n                                <NotificationsIcon/>\n                            </Badge>\n                        </IconButton>\n\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            onClick={this.logout}>\n                            <Badge color=\"secondary\">\n                                <ExitToApp/>\n                            </Badge>\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    variant=\"permanent\"\n                    classes={{\n                        paper: clsx(classes.drawerPaper, !menuLeftOpen && classes.drawerPaperClose),\n                    }}\n                    open={menuLeftOpen}\n                >\n                    <div className={classes.toolbarIcon}>\n                        <IconButton onClick={this.handleCloseLeftMenu}>\n                            <ChevronLeftIcon/>\n                        </IconButton>\n                    </div>\n                    <Divider/>\n                    <List>\n                        <div>\n                            {environments.map((value, index) => {\n                                return <ListItem button key={`menu-${value.id}`}>\n                                    <ListItemIcon>\n                                        {React.createElement(Icons[value.icon])}\n                                    </ListItemIcon>\n                                    <ListItemText primary={value.name}/>\n                                </ListItem>\n                            })}\n                        </div>\n                    </List>\n                </Drawer>\n                <SwipeableDrawer\n                    anchor=\"right\"\n                    onClose={this.handleCloseRightMenu}\n                    onOpen={this.handleOpenRightMenu}\n                    open={menuRightOpen}\n                >\n                    <div className={classes.toolbarIconRight}>\n                        <IconButton onClick={this.handleCloseRightMenu}>\n                            <ChevronRightIcon/>\n                        </IconButton>\n                    </div>\n                    <Divider/>\n                    <List>\n                        <div className={classes.rightMenu}>\n                            <h3>Chat com que está no(a) {currentEnvironment.name} (mesmo lugar que você):</h3>\n                            <div className={classes.chatMessages}>\n                                {chatMessages.map((value, index) => {\n                                    return <div key={`chatMessages-${value.id}`}>\n                                        <span className={classes.chatMessageAccount}>\n                                            {value.account.name}: &nbsp;\n                                        </span>\n                                        <span dangerouslySetInnerHTML={{__html: value.text}}/>\n                                    </div>\n                                })}\n                            </div>\n                            <form className={classes.chatForm} noValidate>\n                                <TextField\n                                    inputRef={this.chatInput}\n                                    className={classes.chatInput}\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    multiline\n                                    inputProps={{maxLength: 2048}}\n                                    rowsMax={4}\n                                    fullWidth\n                                    name=\"message\"\n                                    type=\"text\"\n                                    id=\"message\"\n                                    value={message}\n                                    onChange={this.changeMessage}\n                                />\n                                <IconButton color=\"primary\" aria-label=\"Enviar\"\n                                            onClick={() => this.handleSendMessage(false)}>\n                                    <Send/>\n                                </IconButton>\n                            </form>\n\n                            <h3>Chat com todos:</h3>\n                            <div className={classes.chatMessages}>\n                                {chatMessagesAll.map((value, index) => {\n                                    return <div key={`chatMessages-${value.id}`}>\n                                        <span className={classes.chatMessageAccount}>\n                                            {value.account.name}: &nbsp;\n                                        </span>\n                                        <span dangerouslySetInnerHTML={{__html: value.text}}/>\n                                    </div>\n                                })}\n                            </div>\n                            <form className={classes.chatForm} noValidate>\n                                <TextField\n                                    inputRef={this.chatInputAll}\n                                    className={classes.chatInput}\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    multiline\n                                    inputProps={{maxLength: 2048}}\n                                    rowsMax={4}\n                                    fullWidth\n                                    name=\"messageAll\"\n                                    type=\"text\"\n                                    id=\"messageAll\"\n                                    value={messageAll}\n                                    onChange={this.changeMessage}\n                                />\n                                <IconButton color=\"primary\" aria-label=\"Enviar\"\n                                            onClick={() => this.handleSendMessage(true)}>\n                                    <Send/>\n                                </IconButton>\n                            </form>\n                        </div>\n                        <Divider/>\n                    </List>\n                </SwipeableDrawer>\n                <main className={classes.content}>\n                    <div className={classes.appBarSpacer}/>\n                    <Container maxWidth=\"lg\" className={classes.container}>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12}>\n                                <Paper className={classes.paper}>\n                                    <h2>Você está no(a) {currentEnvironment.name}</h2>\n                                    <div dangerouslySetInnerHTML={{__html: currentEnvironment.description}}/>\n\n                                    <Divider/>\n                                    <form className={classes.form} noValidate>\n                                        {currentEnvironment.questions.map((value, index) => {\n                                            return <div key={`div-question-${value.id}`}>\n                                                <p dangerouslySetInnerHTML={{__html: value.description}}\n                                                   key={`question-${value.id}`}/>\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    fullWidth\n                                                    name={`response-${index}`}\n                                                    label=\"Resposta\"\n                                                    multiline\n                                                    type=\"text\"\n                                                    inputProps={{maxLength: 1024}}\n                                                    rowsMax={4}\n                                                    key={`response-${index}`}\n                                                    id={`response-${index}`}\n                                                    value={value.responses.length === 0 ? \"\" : value.responses[0].text}\n                                                    onChange={this.changeResponse}\n                                                />\n                                            </div>;\n                                        })}\n\n                                        {currentEnvironment.questions.length > 0 && <Button\n                                            type=\"button\"\n                                            fullWidth\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.submit}\n                                            onClick={this.handleSendResponses}\n                                        >\n                                            Enviar\n                                        </Button>}\n                                    </form>\n\n                                    <Snackbar open={alertOpen} autoHideDuration={6000} onClose={this.handleCloseAlert}>\n                                        <Alert onClose={this.handleCloseAlert} severity=\"success\">\n                                            As respostas foram salvas!\n                                        </Alert>\n                                    </Snackbar>\n\n                                    <Divider/>\n                                    <div className={classes.toolsDiv}>\n                                        {currentEnvironment.tools.map((value, index) => {\n                                            return <Box component=\"div\" display=\"inline-block\" p={1} m={1}\n                                                        className={classes.tools}\n                                                        key={`tool-description-${value.id}`}>\n                                                {value.description}\n                                            </Box>;\n                                        })}\n                                    </div>\n                                </Paper>\n\n                                {isLeader && <Grid justify=\"space-between\" container spacing={2}>\n                                    <Grid item xs={6} className={classes.carGrid}>\n                                        <Paper className={classes.paper}>\n                                            <h3>Carro 1 está no(a) {car1.fromEnvironment.name}</h3>\n                                            <Divider/>\n\n                                            {accounts1.map((value, index) => {\n                                                return <ListItem button key={`account1-${value.id}`}\n                                                                 onClick={() => this.selectAccount(index, 1)}>\n                                                    <ListItemIcon>\n                                                        <Adjust style={{color: value.color}}/>\n                                                    </ListItemIcon>\n                                                    <ListItemText primary={value.name}/>\n                                                </ListItem>\n                                            })}\n                                            <Divider/>\n                                            <TextField\n                                                variant=\"outlined\"\n                                                margin=\"normal\"\n                                                fullWidth\n                                                name=\"tool1\"\n                                                label=\"Ferramentas\"\n                                                multiline\n                                                type=\"text\"\n                                                rowsMax={8}\n                                                key=\"tool1\"\n                                                id=\"tool1\"\n                                                value={tool1}\n                                                onChange={this.changeValue}\n                                            />\n                                            <Autocomplete\n                                                options={environments.filter(e => e.id !== car1.fromEnvironment.id)}\n                                                fullWidth\n                                                renderOption={(option) => (\n                                                    <React.Fragment>\n                                                        {React.createElement(Icons[option.icon])}\n                                                        {option.name}\n                                                    </React.Fragment>\n                                                )}\n                                                value={car1.toEnvironment}\n                                                onChange={(event, value) => this.onChangeEnvironmentTo(1, value)}\n                                                getOptionLabel={(option) => option.name}\n                                                renderInput={(params) =>\n                                                    <TextField {...params} label=\"Indo para\" variant=\"outlined\"\n                                                               inputProps={{...params.inputProps}}/>}\n                                            />\n\n                                            <IconButton color=\"primary\" aria-label=\"Ir\" className={classes.carButton}\n                                                        onClick={() => this.handleCarGo(1)}>\n                                                <Send/>\n                                            </IconButton>\n                                        </Paper>\n                                    </Grid>\n                                    <Grid item xs={6} className={classes.carGrid}>\n                                        <Paper className={classes.paper}>\n                                            <h3>Carro 2 está no(a) {car2.fromEnvironment.name}</h3>\n                                            <Divider/>\n\n                                            {accounts2.map((value, index) => {\n                                                return <ListItem button key={`account2-${value.id}`}\n                                                                 onClick={() => this.selectAccount(index, 2)}>\n                                                    <ListItemIcon>\n                                                        <Adjust style={{color: value.color}}/>\n                                                    </ListItemIcon>\n                                                    <ListItemText primary={value.name}/>\n                                                </ListItem>\n                                            })}\n                                            <Divider/>\n                                            <TextField\n                                                variant=\"outlined\"\n                                                margin=\"normal\"\n                                                fullWidth\n                                                name=\"tool2\"\n                                                label=\"Ferramentas\"\n                                                multiline\n                                                type=\"text\"\n                                                rowsMax={8}\n                                                key=\"tool2\"\n                                                id=\"tool2\"\n                                                value={tool2}\n                                                onChange={this.changeValue}\n                                            />\n\n                                            <Autocomplete\n                                                options={environments.filter(e => e.id !== car2.fromEnvironment.id)}\n                                                fullWidth\n                                                renderOption={(option) => (\n                                                    <React.Fragment>\n                                                        {React.createElement(Icons[option.icon])}\n                                                        {option.name}\n                                                    </React.Fragment>\n                                                )}\n                                                value={car2.toEnvironment}\n                                                onChange={(event, value) => this.onChangeEnvironmentTo(2, value)}\n                                                getOptionLabel={(option) => option.name}\n                                                renderInput={(params) =>\n                                                    <TextField {...params} label=\"Indo para\" variant=\"outlined\"\n                                                               inputProps={{...params.inputProps}}/>}\n                                            />\n\n                                            <IconButton color=\"primary\" aria-label=\"Ir\" className={classes.carButton}\n                                                        onClick={() => this.handleCarGo(2)}>\n                                                <Send/>\n                                            </IconButton>\n                                        </Paper>\n                                    </Grid>\n                                </Grid>}\n                            </Grid>\n                        </Grid>\n                        <Box pt={4}>\n                            <Copyright/>\n                        </Box>\n                    </Container>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(Styles)(Home)\n","import React, {Component} from \"react\";\nimport {api} from \"../../services/api\";\nimport {Styles} from \"./styles\";\nimport {Divider, List, ListItemText, withStyles} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Moment from \"moment\";\n\nclass Report extends Component {\n    state = {\n        ags: []\n    };\n\n    componentDidMount() {\n        this.handleAccountGroups();\n    }\n\n    handleAccountGroups = () => {\n        api.get(\"/api/accountGroups\")\n            .then(response => {\n                    const {ags} = this.state;\n                    response.data.forEach(accountGroup => {\n                        ags[accountGroup.id - 1] = {name: accountGroup.name};\n                        this.setState(ags);\n                        this.handleReport(accountGroup);\n                    });\n                }\n            );\n    };\n\n    handleReport = (accountGroup) => {\n        api.get(`/api/report/getByAccountGroupId/${accountGroup.id}`)\n            .then(response => this.handleSetReport(accountGroup, response, \"report\"));\n\n        api.get(`/api/report/getQuestionsByAccountGroupId/${accountGroup.id}`)\n            .then(response => this.handleSetReport(accountGroup, response, \"questions\"));\n    }\n\n    handleSetReport = (accountGroup, response, key) => {\n        const {ags} = this.state;\n        ags[accountGroup.id - 1][key] = response.data;\n        this.setState(ags);\n    };\n\n    formatDate = (ts) => {\n        const dt = new Date(ts);\n        return Moment(dt).format('DD/MM/yyyy HH:mm');\n    };\n\n    formatHour = (duration) => {\n        const hours = Math.floor(duration / 3600000);\n        const minutes = Math.floor((duration - (hours * 3600000)) / 60000);\n        return `${('0' + hours).slice(-2)}:${('0' + minutes).slice(-2)}`;\n    };\n\n    render() {\n        const {classes} = this.props;\n        const {ags} = this.state;\n\n        return (\n            <Container maxWidth=\"lg\" className={classes.container}>\n                <Grid container>\n                    <Grid item xs={12}>\n                        {ags.filter(value => !!value.report).map((ag, index) => {\n                            return <div key={`ag-${index}`}>\n                                <h2>Grupo: {ag.name}</h2>\n                                <h3>Alunos: </h3>\n                                <List className={classes.root}>\n                                    {Object.keys(ag.report.accounts).map((ra, raI) => {\n                                        return <ListItemText key={`ra-${index}-${ra}`}>\n                                            RA {ra}: {ag.report.accounts[ra]}\n                                        </ListItemText>;\n                                    })}\n                                </List>\n\n                                <Divider/>\n\n                                <h3>Tempo: </h3>\n                                <p>Início: ~{this.formatDate(ag.report.startTime)}</p>\n                                <p>Fim: ~{this.formatDate(ag.report.endTime)}</p>\n                                <p>Duração: ~{this.formatHour(ag.report.duration)}</p>\n\n                                <Divider/>\n\n                                <h3>Questões: </h3>\n                                {Object.keys(ag.questions).map((environment, eI) => {\n                                    return <div key={`env-${index}-${eI}`}>\n                                        <h4>{environment}:</h4>\n                                        {ag.questions[environment].map((q, qI) => {\n                                            return <div key={`question-${index}-${qI}`}>\n                                                Q.: <p dangerouslySetInnerHTML={{__html: q.question}}/>\n                                                {q.responses.map((r, rI) => {\n                                                    return <div key={`response-${index}-${rI}`}>\n                                                        <span className={classes.response}>\n                                                            R.: ({r.account})\n                                                        - {this.formatDate(r.timestamp)}:\n                                                        </span> {r.response}\n                                                    </div>;\n                                                })}\n                                            </div>;\n                                        })}\n                                    </div>;\n                                })}\n\n                                <Divider/>\n\n                                <h3>Mensagens: </h3>\n                                {Object.keys(ag.report.messages).map((environment, eI) => {\n                                    return <div key={`env-message-${index}-${eI}`}>\n                                        <h4>{environment}:</h4>\n                                        {ag.report.messages[environment].map((m, mI) => {\n                                            return <div key={`message-${index}-${mI}`}>\n                                                {m.accounts} - {this.formatDate(m.timestamp)}: {m.text}\n                                            </div>;\n                                        })}\n                                    </div>;\n                                })}\n\n                                <Divider/>\n\n                                <h3>Movimentação: </h3>\n                                {ag.report.events.map((e, evI) => {\n                                    return <div key={`event-${index}-${evI}`} className={classes.transportDiv}>\n                                        <p><span className={classes.span}>Saiu do(a):</span> {e.from}</p>\n                                        <p><span className={classes.span}>Foi para o(a):</span> {e.to}</p>\n                                        <p><span className={classes.span}>As:</span> {this.formatDate(e.timestamp)}</p>\n                                        <p><span className={classes.span}>Levou:</span>\n                                            {e.tools.reduce((result, item) => {\n                                                return `${result} ${item};`\n                                            }, \"\")}\n                                        </p>\n                                        <p><span className={classes.span}>Quem foi:</span>\n                                            {e.accounts.reduce((result, item) => {\n                                                return `${result} ${item};`\n                                            }, \"\")}\n                                        </p>\n                                    </div>;\n                                })}\n\n                                <Divider className={classes.dividerAG}/>\n                            </div>;\n                        })}\n                    </Grid>\n                </Grid>\n            </Container>\n        );\n    }\n}\n\nexport default withStyles(Styles)(Report)","export const Styles = theme => ({\n    dividerAG: {\n        height: \"15px\",\n        background: \"red\",\n        marginTop: \"5px\"\n    },\n    transportDiv: {\n        border: \"solid 1px black\",\n        borderRadius: \"5px\",\n        marginTop: \"5px\",\n        paddingLeft: \"10px\"\n    },\n    span: {\n        fontWeight: \"bold\"\n    },\n    response: {\n        color: \"blue\"\n    }\n});","import React, {Component} from \"react\";\nimport {api} from \"../../services/api\";\nimport {Styles} from \"./styles\";\nimport {Divider, List, ListItemText, withStyles} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Moment from \"moment\";\n\nclass ReportOrdered extends Component {\n    state = {\n        ags: []\n    };\n\n    componentDidMount() {\n        this.handleAccountGroups();\n    }\n\n    handleAccountGroups = () => {\n        api.get(\"/api/accountGroups\")\n            .then(response => {\n                    const {ags} = this.state;\n                    response.data.forEach(accountGroup => {\n                        ags[accountGroup.id - 1] = {name: accountGroup.name, responses: [], transports: []};\n                        this.setState(ags);\n                        this.handleReport(accountGroup);\n                    });\n                }\n            );\n    };\n\n    handleReport = (accountGroup) => {\n        api.get(`/api/report/getByAccountGroupId/${accountGroup.id}`)\n            .then(response => {\n                this.handleSetReport(accountGroup, response.data, \"report\");\n                response.data.events.forEach(t => t[\"type\"] = \"transport\");\n                this.handleSetReport(accountGroup, response.data.events, \"transports\");\n            });\n\n        api.get(`/api/report/getQuestionsByAccountGroupId/${accountGroup.id}`)\n            .then(response => {\n                this.handleSetReport(accountGroup, response.data, \"questions\");\n                const responses = Object.keys(response.data).map((environment, eI) => {\n                    return response.data[environment].map(q => {\n                        q.responses.forEach(r => {\n                            r[\"question\"] = q.question;\n                            r[\"type\"] = \"response\";\n                        });\n                        return q.responses;\n                    });\n                }).flat().flat().sort((a, b) =>\n                    this.compare(a, b))\n\n                this.handleSetReport(accountGroup, responses, \"responses\");\n            });\n    }\n\n    handleSetReport = (accountGroup, data, key) => {\n        const {ags} = this.state;\n        ags[accountGroup.id - 1][key] = data;\n        this.setState(ags);\n    };\n\n    compare = (a, b) => {\n        if (a.timestamp > b.timestamp) return 1;\n        else if (a.timestamp < b.timestamp) return -1;\n        return 0;\n    };\n\n    formatDate = (ts) => {\n        const dt = new Date(ts);\n        return Moment(dt).format('DD/MM/yyyy HH:mm');\n    };\n\n    formatHour = (duration) => {\n        const hours = Math.floor(duration / 3600000);\n        const minutes = Math.floor((duration - (hours * 3600000)) / 60000);\n        return `${('0' + hours).slice(-2)}:${('0' + minutes).slice(-2)}`;\n    };\n\n    render() {\n        const {classes} = this.props;\n        const {ags} = this.state;\n\n        return (\n            <Container maxWidth=\"lg\" className={classes.container}>\n                <Grid container>\n                    <Grid item xs={12}>\n                        {ags.filter(value => !!value.report).map((ag, index) => {\n                            return <div key={`ag-${index}`}>\n                                <h2>Grupo: {ag.name}</h2>\n                                <h3>Alunos: </h3>\n                                <List className={classes.root}>\n                                    {Object.keys(ag.report.accounts).map((ra, raI) => {\n                                        return <ListItemText key={`ra-${index}-${ra}`}>\n                                            RA {ra}: {ag.report.accounts[ra]}\n                                        </ListItemText>;\n                                    })}\n                                </List>\n\n                                <Divider/>\n\n                                <h3>Tempo: </h3>\n                                <p>Início: ~{this.formatDate(ag.report.startTime)}</p>\n                                <p>Fim: ~{this.formatDate(ag.report.endTime)}</p>\n                                <p>Duração: ~{this.formatHour(ag.report.duration)}</p>\n\n                                <Divider/>\n\n                                <h3>Eventos: </h3>\n                                {ag.responses.concat(ag.transports).sort((a, b) => this.compare(a, b))\n                                    .map((e, eI) => {\n                                        return <div key={`event-${index}-${eI}`}>\n                                            {e.type === \"transport\" &&\n                                            <div className={classes.transportDiv}>\n                                                <p><span className={classes.span}>Saiu do(a):</span> {e.from}</p>\n                                                <p><span className={classes.span}>Foi para o(a):</span> {e.to}</p>\n                                                <p><span\n                                                    className={classes.span}>As:</span> {this.formatDate(e.timestamp)}\n                                                </p>\n                                                <p><span className={classes.span}>Levou:</span>\n                                                    {e.tools.reduce((result, item) => {\n                                                        return `${result} ${item};`\n                                                    }, \"\")}\n                                                </p>\n                                                <p><span className={classes.span}>Quem foi:</span>\n                                                    {e.accounts.reduce((result, item) => {\n                                                        return `${result} ${item};`\n                                                    }, \"\")}\n                                                </p>\n                                            </div>}\n                                            {e.type === \"response\" &&\n                                            <div>\n                                                <p>Q.: <p dangerouslySetInnerHTML={{__html: e.question}}/></p>\n                                                <span className={classes.response}>\n                                                R.: ({e.account})\n                                                - {this.formatDate(e.timestamp)}:\n                                                </span> {e.response}\n                                            </div>\n                                            }\n                                        </div>;\n                                    })}\n\n                                <Divider className={classes.dividerAG}/>\n                            </div>;\n                        })}\n                    </Grid>\n                </Grid>\n            </Container>\n        );\n    }\n}\n\nexport default withStyles(Styles)(ReportOrdered)\n\n","export const Styles = theme => ({\n    dividerAG: {\n        height: \"15px\",\n        background: \"red\",\n        marginTop: \"5px\"\n    },\n    transportDiv: {\n        border: \"solid 1px black\",\n        borderRadius: \"5px\",\n        marginTop: \"5px\",\n        paddingLeft: \"10px\"\n    },\n    span: {\n        fontWeight: \"bold\"\n    },\n    response: {\n        color: \"blue\"\n    }\n});","import React, {Component} from \"react\";\nimport {Styles} from \"./styles\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {Button, Container, ListItemText, TextField} from \"@material-ui/core\";\nimport api from \"../../services/api\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\nclass AccountGroup extends Component {\n    state = {\n        accounts: [],\n        selected: [],\n        name: \"\"\n    };\n\n    componentDidMount() {\n        this.handleAccounts();\n    }\n\n    handleAccounts = () => {\n        api.get(\"/api/accounts\")\n            .then(response => this.setState({accounts: response.data}));\n    };\n\n    save = () => {\n        const {name, selected} = this.state;\n        const nameTrim = name.trim();\n        if (!!nameTrim && selected.length > 0) {\n            api.post(\"/api/accountGroups\", {\n                name: nameTrim,\n                accounts: selected\n            }).then(() => {\n                this.handleAccounts();\n                this.setState({\n                    name: \"\",\n                    selected: []\n                })\n            }).catch(reason => alert(reason));\n        }\n    }\n\n    render() {\n        const {classes} = this.props;\n        const {accounts, selected, name} = this.state;\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"name\"\n                    label=\"Nome\"\n                    type=\"text\"\n                    id=\"name\"\n                    focused={true}\n                    value={name}\n                    onChange={event => this.setState({name: event.target.value})}\n                />\n\n                <Autocomplete\n                    options={accounts.filter(value => !value.accountGroup)}\n                    fullWidth\n                    renderOption={(option) => (\n                        <React.Fragment>\n                            {`${option.number} - ${option.name}`}\n                        </React.Fragment>\n                    )}\n                    value={selected}\n                    multiple={true}\n                    onChange={(event, value) =>\n                        this.setState({selected: value})}\n                    getOptionLabel={(option) => option.name}\n                    renderInput={(params) =>\n                        <TextField {...params} label=\"Aluno\" variant=\"outlined\"\n                                   inputProps={{...params.inputProps}}/>}\n                />\n                <Button\n                    type=\"button\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    onClick={this.save}\n                >\n                    Salvar\n                </Button>\n\n                <h3>Grupos: {name}</h3>\n\n                <h3>Alunos:</h3>\n                {selected.map((value, index) => {\n                    return <ListItem>\n                        <ListItemText primary={`${value.number} - ${value.name} ${index === 0 ? \"(líder)\" : \"\"}`}/>\n                    </ListItem>\n                })}\n            </Container>\n        );\n    }\n}\n\nexport default withStyles(Styles)(AccountGroup)","export const Styles = theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    logo: {\n        margin: theme.spacing(1),\n        width: \"120px\",\n        height: \"120px\",\n        backgroundColor: \"transparent\",\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});","import React from \"react\";\nimport {HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\nimport SignUp from \"./pages/signup\";\nimport SignIn from \"./pages/signin\";\nimport Home from \"./pages/home\";\nimport Report from \"./pages/report\";\n\nimport {isAuthenticated} from \"./services/auth\";\nimport ReportOrdered from \"./pages/reportOrdered\";\nimport AccountGroup from \"./pages/accountgroup\";\n\nconst PrivateRoute = ({component: Component, ...rest}) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuthenticated() ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to={{pathname: \"/\", state: {from: props.location}}}/>\n            )\n        }\n    />\n);\n\nconst Routes = () => (\n    <HashRouter basename=\"/radioactive-game-web\">\n        <Switch>\n            <Route exact path=\"/\" component={SignIn}/>\n            <Route path=\"/signup\" component={SignUp}/>\n            <PrivateRoute path=\"/app\" component={Home}/>\n            <PrivateRoute path=\"/report\" component={Report}/>\n            <PrivateRoute path=\"/reportOrdered\" component={ReportOrdered}/>\n            <PrivateRoute path=\"/accountgroup\" component={AccountGroup}/>\n            <Route path=\"*\" component={() => <h1>Page not found</h1>}/>\n        </Switch>\n    </HashRouter>\n);\n\nexport default Routes;","import React from \"react\";\nimport \"./styles/global\";\nimport Routes from \"./routes\";\n\nconst App = () => <Routes />;\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}