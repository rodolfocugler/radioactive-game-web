{"version":3,"sources":["styles/global.js","assets/nuclear.svg","utils/form/index.js","services/auth.js","services/api.js","utils/app/index.js","pages/signup/index.js","pages/signup/styles.js","pages/signin/index.js","pages/signin/styles.js","pages/home/styles.js","pages/home/index.js","routes.js","App.js","index.js"],"names":["createGlobalStyle","validate","validation","value","i","length","error","validateFields","fields","keys","Object","key","validateForm","resetForm","isRequired","TOKEN_KEY","TOKEN_EXPIRES_AT","getToken","localStorage","getItem","login","token","decodedToken","jwt","setItem","exp","toString","getUser","id","aud","email","sub","name","user","environment","group","api","axios","create","baseURL","interceptors","request","use","a","config","headers","Authorization","Copyright","Typography","variant","color","align","Date","getFullYear","SignIn","state","password","changeValue","e","target","nextState","setState","handleSignUp","preventDefault","updatedFields","post","console","log","classes","this","props","Container","component","maxWidth","CssBaseline","className","paper","src","Logo","alt","logo","form","noValidate","onSubmit","TextField","margin","required","fullWidth","label","autoComplete","autoFocus","helperText","onChange","type","Button","submit","Box","mt","Component","withStyles","theme","marginTop","spacing","display","flexDirection","alignItems","width","height","backgroundColor","handleSignIn","response","authorization","history","push","drawerWidth","Home","message","menuLeftOpen","menuRightOpen","environments","currentEnvironment","questions","description","responses","chatMessages","newMessages","accounts1","accounts2","car1","toEnvironment","car2","tool1","tool2","logout","removeItem","handleMenu","get","then","data","handleAccounts","accounts","forEach","red","handleCars","carIndex","list","JSON","parse","stringify","filter","handleCurrentEnvironment","handleMessages","handleOpenLeftMenu","handleCloseLeftMenu","handleOpenRightMenu","handleCloseRightMenu","changeMessage","handleSendMessage","chatInput","current","focus","changeResponse","index","substring","parseInt","selectAccount","accountIndex","carNumber","green","handleCarGo","React","createRef","stompClient","Stomp","over","SockJS","transports","connect","subscribe","concat","body","root","AppBar","position","clsx","appBar","appBarShift","Toolbar","toolbar","IconButton","edge","aria-label","onClick","menuButtonLeft","menuButtonHidden","noWrap","title","menuButtonRight","Badge","badgeContent","ExitToApp","Drawer","drawerPaper","drawerPaperClose","open","toolbarIcon","Divider","List","map","ListItem","button","ListItemIcon","createElement","Icons","icon","ListItemText","primary","SwipeableDrawer","anchor","onClose","onOpen","toolbarIconRight","rightMenu","chatMessageAccount","account","dangerouslySetInnerHTML","__html","text","chatForm","inputRef","multiline","inputProps","maxLength","rowsMax","Send","content","appBarSpacer","container","Grid","item","xs","Paper","justify","carGrid","Adjust","style","carButton","pt","paddingRight","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","marginRight","flexGrow","whiteSpace","overflowX","breakpoints","up","overflow","paddingTop","paddingBottom","minHeight","fixedHeight","overflowY","border","alignSelf","fontWeight","PrivateRoute","rest","render","getTime","to","pathname","from","location","Routes","basename","exact","path","SignUp","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6bd7a9d0.chunk.js","sourcesContent":["import {createGlobalStyle} from \"styled-components\";\n\nimport \"font-awesome/css/font-awesome.css\";\n\ncreateGlobalStyle`\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n  outline: 0;\n}\nbody, html {\n  background: #eee;\n  font-family: 'Helvetica Neue', 'Helvetica', Arial, sans-serif;\n  text-rendering: optimizeLegibility !important;\n  -webkit-font-smoothing: antialiased !important;\n  height: 100%;\n  width: 100%;\n}\n`;","export default __webpack_public_path__ + \"static/media/nuclear.272c3b9e.svg\";","export const validate = (validation, value) => {\n    for (let i = 0; i < validation.length; i++) {\n        let error = validation[i](value);\n        if (error !== \"\") {\n            return error;\n        }\n    }\n\n    return \"\";\n};\n\nexport const validateFields = (fields) => {\n    const keys = Object.keys(fields);\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let validation = fields[key][\"validation\"];\n        let value = fields[key][\"value\"];\n\n        fields[key][\"error\"] = validate(validation, value);\n    }\n\n    return fields;\n};\n\nexport const validateForm = (fields) => {\n    const keys = Object.keys(fields);\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        if (fields[key][\"error\"] !== \"\") return false;\n    }\n\n    return true;\n};\n\nexport const resetForm = (fields) => {\n    const keys = Object.keys(fields);\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        fields[key][\"value\"] = \"\";\n    }\n\n    return fields;\n};\n\nexport const isRequired = (value) => {\n    return !value ? \"Preencha para continuar!\" : \"\";\n};\n","import jwt from \"jwt-decode\"\n\nexport const TOKEN_KEY = \"TOKEN_KEY\";\nexport const TOKEN_EXPIRES_AT = \"TOKEN_EXPIRES_AT\";\nexport const isAuthenticated = () => {\n    return localStorage.getItem(TOKEN_KEY) !== null &&\n        new Date().getTime() / 1000 < parseInt(localStorage.getItem(TOKEN_EXPIRES_AT));\n};\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\nexport const login = token => {\n    const decodedToken = jwt(token);\n    localStorage.setItem(TOKEN_KEY, token);\n    localStorage.setItem(TOKEN_EXPIRES_AT, decodedToken.exp.toString());\n};\nexport const logout = () => {\n    localStorage.removeItem(TOKEN_KEY);\n    localStorage.removeItem(TOKEN_EXPIRES_AT);\n};\nexport const getUser = () => {\n    const decodedToken = jwt(localStorage.getItem(TOKEN_KEY));\n    return {\n        id: decodedToken.aud,\n        email: decodedToken.sub,\n        name: decodedToken.user,\n        environment: decodedToken.environment,\n        group: decodedToken.group\n    }\n};","import axios from \"axios\";\nimport {getToken} from \"./auth\";\nimport SockJS from \"sockjs-client\";\n\nexport const api = axios.create({\n    baseURL: \"https://radioactive-game.herokuapp.com\"\n});\n\nexport const wsClient = () => {\n    return new SockJS(\"https://radioactive-game.herokuapp.com/gs-websocket\",\n        null,\n        {transports: ['xhr-streaming'], headers: {'Authorization': `Bearer ${getToken()}`}});\n}\n\napi.interceptors.request.use(async config => {\n    const token = getToken();\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n});\n\nexport default api;","import {Typography} from \"@material-ui/core\";\nimport React from \"react\";\n\nexport const Copyright = () => {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {\"Copyright © \" + new Date().getFullYear()}\n        </Typography>\n    );\n}","import React, {Component} from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {Styles} from \"./styles\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {Box, Button, Container} from \"@material-ui/core\";\nimport Logo from \"../../assets/nuclear.svg\"\nimport {isRequired, resetForm, validate, validateFields, validateForm} from \"../../utils/form\";\nimport api from \"../../services/api\";\nimport {Copyright} from \"../../utils/app\";\n\nclass SignIn extends Component {\n    state = {\n        fields: {\n            name: {\n                value: \"\",\n                error: \"\",\n                validation: [isRequired]\n            },\n            email: {\n                value: \"\",\n                error: \"\",\n                validation: [isRequired]\n            },\n            password: {\n                value: \"\",\n                error: \"\",\n                validation: [isRequired]\n            }\n        }\n    };\n\n    changeValue = (e) => {\n        const value = e.target.value;\n        const name = e.target.id;\n        const nextState = this.state[\"fields\"];\n\n        nextState[name][\"value\"] = value;\n        nextState[name][\"error\"] = validate(nextState[name][\"validation\"], value);\n        this.setState(nextState);\n    }\n\n    handleSignUp = async e => {\n        e.preventDefault();\n        const {fields} = this.state;\n\n        const updatedFields = validateFields(fields);\n        if (validateForm(updatedFields)) {\n            try {\n                await api.post(\"/api/accounts\", {\n                    \"name\": fields.name.value,\n                    \"email\": fields.email.value,\n                    \"number\": fields.password.value,\n                    \"environment\": {\n                        \"id\": 1\n                    }\n                });\n                this.setState(resetForm(fields));\n            } catch (err) {\n                console.log(err);\n            }\n        } else {\n            this.setState(updatedFields);\n        }\n    };\n\n    render() {\n        const {classes} = this.props;\n        const {fields} = this.state;\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline/>\n                <div className={classes.paper}>\n                    <img src={Logo} alt=\"Logo\" className={classes.logo}/>\n                    <form className={classes.form} noValidate onSubmit={this.handleSignUp}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"name\"\n                            label=\"Nome\"\n                            name=\"name\"\n                            autoComplete=\"Nome\"\n                            autoFocus\n                            value={fields.name.value}\n                            error={fields.name.error !== \"\"}\n                            helperText={fields.name.error}\n                            onChange={this.changeValue}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"E-mail\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            value={fields.email.value}\n                            error={fields.email.error !== \"\"}\n                            helperText={fields.email.error}\n                            onChange={this.changeValue}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"CPF\"\n                            type=\"text\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            value={fields.password.value}\n                            error={fields.password.error !== \"\"}\n                            helperText={fields.password.error}\n                            onChange={this.changeValue}\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Cadastrar\n                        </Button>\n                    </form>\n                </div>\n                <Box mt={8}>\n                    <Copyright/>\n                </Box>\n            </Container>\n        );\n    }\n}\n\nexport default withStyles(Styles)(SignIn)\n\n","export const Styles = theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    logo: {\n        margin: theme.spacing(1),\n        width: \"120px\",\n        height: \"120px\",\n        backgroundColor: \"transparent\",\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});","import React, {Component} from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {Styles} from \"./styles\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {Box, Button, Container} from \"@material-ui/core\";\nimport Logo from \"../../assets/nuclear.svg\"\nimport {isRequired, validate, validateFields, validateForm} from \"../../utils/form\";\nimport api from \"../../services/api\";\nimport {login} from \"../../services/auth\";\nimport {Copyright} from \"../../utils/app\";\n\nclass SignIn extends Component {\n    state = {\n        fields: {\n            email: {\n                value: \"\",\n                error: \"\",\n                validation: [isRequired]\n            },\n            password: {\n                value: \"\",\n                error: \"\",\n                validation: [isRequired]\n            }\n        }\n    };\n\n    changeValue = (e) => {\n        const value = e.target.value;\n        const name = e.target.id;\n        const nextState = this.state[\"fields\"];\n\n        nextState[name][\"value\"] = value;\n        nextState[name][\"error\"] = validate(nextState[name][\"validation\"], value);\n        this.setState(nextState);\n    }\n\n    handleSignIn = async e => {\n        e.preventDefault();\n        const {fields} = this.state;\n\n        const updatedFields = validateFields(fields);\n        if (validateForm(updatedFields)) {\n            try {\n                const response = await api.post(\"/login\", {\n                    \"email\": fields.email.value,\n                    \"password\": fields.password.value\n                });\n                login(response.headers.authorization);\n                this.props.history.push(\"/app\");\n            } catch (err) {\n                fields.email.error = \"E-mail ou CPF inválidos.\"\n                fields.password.error = \"E-mail ou CPF inválidos.\"\n                this.setState(fields);\n            }\n        } else {\n            this.setState(updatedFields);\n        }\n    };\n\n    render() {\n        const {classes} = this.props;\n        const {fields} = this.state;\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline/>\n                <div className={classes.paper}>\n                    <img src={Logo} alt=\"Logo\" className={classes.logo}/>\n                    <form className={classes.form} noValidate onSubmit={this.handleSignIn}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"E-mail\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            value={fields.email.value}\n                            error={fields.email.error !== \"\"}\n                            helperText={fields.email.error}\n                            onChange={this.changeValue}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"CPF\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            value={fields.password.value}\n                            error={fields.password.error !== \"\"}\n                            helperText={fields.password.error}\n                            onChange={this.changeValue}\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Entrar\n                        </Button>\n                    </form>\n                </div>\n                <Box mt={8}>\n                    <Copyright/>\n                </Box>\n            </Container>\n        );\n    }\n}\n\nexport default withStyles(Styles)(SignIn)\n\n","export const Styles = theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    logo: {\n        margin: theme.spacing(1),\n        width: \"120px\",\n        height: \"120px\",\n        backgroundColor: \"transparent\",\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});","const drawerWidth = 350;\n\nexport const Styles = theme => ({\n    root: {\n        display: \"flex\",\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: \"0 8px\",\n        ...theme.mixins.toolbar,\n    },\n    toolbarIconRight: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        padding: \"0 8px\",\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButtonLeft: {\n        marginRight: 36,\n    },\n    menuButtonRight: {\n        marginLeft: 36,\n    },\n    menuButtonHidden: {\n        display: \"none\",\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: \"relative\",\n        whiteSpace: \"nowrap\",\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: \"hidden\",\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: \"100vh\",\n        overflow: \"auto\",\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: \"flex\",\n        overflow: \"auto\",\n        flexDirection: \"column\",\n        minHeight: 540,\n    },\n    fixedHeight: {\n        height: 240,\n    },\n    rightMenu: {\n        width: drawerWidth,\n        marginLeft: \"10px\",\n        marginRight: \"10px\",\n    },\n    chatMessages: {\n        height: \"250px\",\n        overflowY: \"auto\",\n        border: \"1px solid black\"\n    },\n    chatForm: {\n        display: \"flex\",\n        flexDirection: \"row\"\n    },\n    chatInput: {\n        alignSelf: \"flex-end\"\n    },\n    chatMessageAccount: {\n        fontWeight: \"bold\"\n    },\n    carGrid: {\n        marginTop: \"20px\"\n    },\n    carButton:{\n        width: \"50px\",\n        alignSelf: \"flex-end\"\n    }\n});","import React, {Component} from \"react\";\nimport clsx from \"clsx\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport {Badge, List, SwipeableDrawer, withStyles} from \"@material-ui/core\";\nimport {Copyright} from \"../../utils/app\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport * as Icons from \"@material-ui/icons\";\nimport {Adjust, ExitToApp, Send} from \"@material-ui/icons\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {api, wsClient} from \"../../services/api\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {Styles} from \"./styles\";\nimport Stomp from 'stompjs';\nimport {getUser, logout} from \"../../services/auth\";\nimport {green, red} from \"@material-ui/core/colors\";\n\nclass Home extends Component {\n    state = {\n        message: \"\",\n        menuLeftOpen: false,\n        menuRightOpen: false,\n        environments: [],\n        currentEnvironment: {\n            id: 1,\n            questions: [{\n                id: 0,\n                description: \"\",\n                responses: []\n            }]\n        },\n        chatMessages: [],\n        newMessages: 0,\n        accounts1: [],\n        accounts2: [],\n        car1: {\n            toEnvironment: {\n                id: 1,\n                name: \"\"\n            }\n        },\n        car2: {\n            toEnvironment: {\n                id: 1,\n                name: \"\"\n            }\n        },\n        tool1: \"\",\n        tool2: \"\"\n    };\n\n    constructor(props) {\n        super(props);\n        this.chatInput = React.createRef();\n    }\n\n    componentDidMount() {\n        this.handleMenu();\n        this.handleCurrentEnvironment();\n        this.handleMessages();\n        this.handleAccounts();\n\n        const stompClient = Stomp.over(wsClient());\n        const user = getUser();\n        stompClient.connect({}, () => {\n            stompClient.subscribe(`/topic/messages/${user.environment}/${user.group}`,\n                (message) => {\n                    const {chatMessages} = this.state;\n                    this.setState({chatMessages: chatMessages.concat(JSON.parse(message.body))});\n                });\n        }, () => {\n            console.log(\"error\");\n        });\n    }\n\n    logout = () => {\n        logout();\n        this.props.history.push(\"/\");\n    };\n\n    handleMenu = () => {\n        api.get(\"/api/environments\")\n            .then(response =>\n                this.setState({environments: response.data})\n            );\n    };\n\n    handleAccounts = () => {\n        api.get(`/api/accountGroups/${getUser().group}`)\n            .then(response => {\n                    response.data.accounts.forEach(value => value[\"color\"] = red[500]);\n                    this.setState({\n                        accounts: response.data.accounts\n                    });\n\n                    this.handleCars(1);\n                    this.handleCars(2);\n                }\n            );\n    };\n\n    handleCars = (carIndex) => {\n        api.get(`/api/transports/getByIndex/${carIndex}/${getUser().group}`)\n            .then(response => {\n                    const {accounts} = this.state;\n                    const list = JSON.parse(JSON.stringify(accounts));\n                    const nextState = {};\n                    nextState[\"car\" + carIndex] = response.data\n                    nextState[\"accounts\" + carIndex] = list.filter(a => {\n                        if (a.environment.id === response.data.toEnvironment.id) return a;\n                    });\n                    this.setState(nextState);\n                }\n            );\n    };\n\n    handleCurrentEnvironment = () => {\n        api.get(`/api/environments/getWithUserResponses/${this.state.currentEnvironment.id}`)\n            .then(response =>\n                this.setState({currentEnvironment: response.data})\n            );\n    };\n\n    handleMessages = () => {\n        api.get(`/api/chatMessages/getByEnvironmentId/${this.state.currentEnvironment.id}`)\n            .then(response =>\n                this.setState({chatMessages: response.data})\n            );\n    };\n\n    handleOpenLeftMenu = () => {\n        this.setState({menuLeftOpen: true});\n    }\n\n    handleCloseLeftMenu = () => {\n        this.setState({menuLeftOpen: false});\n    }\n\n    handleOpenRightMenu = () => {\n        this.setState({menuRightOpen: true});\n    }\n\n    handleCloseRightMenu = () => {\n        this.setState({menuRightOpen: false});\n    }\n\n    changeMessage = (e) => {\n        this.setState({\"message\": e.target.value});\n    }\n\n    handleSendMessage = async () => {\n        const {message} = this.state;\n        if (message !== \"\") {\n            try {\n                await api.post(\"/api/chatMessages\", {\n                    \"text\": message\n                });\n                this.setState({\"message\": \"\"});\n                this.chatInput.current.focus();\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    }\n\n    changeResponse = (e) => {\n        const value = e.target.value;\n        const name = e.target.id;\n        const index = name.substring(9);\n        const nextState = this.state[\"currentEnvironment\"];\n\n        if (!!nextState[\"questions\"][parseInt(index)][\"responses\"]) {\n            nextState[\"questions\"][parseInt(index)][\"responses\"] = [{\"text\": value}];\n        } else {\n            nextState[\"questions\"][parseInt(index)][\"responses\"][0][\"text\"] = value;\n        }\n\n        this.setState(nextState);\n    }\n\n    changeValue = (e) => {\n        const nextState = {};\n        nextState[e.target.id] = e.target.value;\n        this.setState(nextState);\n    }\n\n    selectAccount = (accountIndex, carNumber) => {\n        const nextState = this.state[\"accounts\" + carNumber];\n        if (nextState[accountIndex][\"color\"] === green[500]) {\n            nextState[accountIndex][\"color\"] = red[500];\n        } else {\n            nextState[accountIndex][\"color\"] = green[500];\n        }\n        this.setState(nextState);\n    }\n\n    handleCarGo = (carNumber) => {\n\n    };\n\n    render() {\n        const {classes} = this.props;\n        const {\n            menuLeftOpen, menuRightOpen, environments, currentEnvironment,\n            message, chatMessages, newMessages, accounts1, accounts2,\n            car1, car2, tool1, tool2\n        } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <CssBaseline/>\n                <AppBar position=\"absolute\" className={clsx(classes.appBar, menuLeftOpen && classes.appBarShift)}>\n                    <Toolbar className={classes.toolbar}>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={this.handleOpenLeftMenu}\n                            className={clsx(classes.menuButtonLeft, menuLeftOpen && classes.menuButtonHidden)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n                        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                            {currentEnvironment.name}\n                        </Typography>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={this.handleOpenRightMenu}\n                            className={clsx(classes.menuButtonRight, menuRightOpen && classes.menuButtonHidden)}\n                        >\n                            <Badge badgeContent={newMessages} color=\"secondary\">\n                                <NotificationsIcon/>\n                            </Badge>\n                        </IconButton>\n\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            onClick={this.logout}>\n                            <Badge color=\"secondary\">\n                                <ExitToApp/>\n                            </Badge>\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    variant=\"permanent\"\n                    classes={{\n                        paper: clsx(classes.drawerPaper, !menuLeftOpen && classes.drawerPaperClose),\n                    }}\n                    open={menuLeftOpen}\n                >\n                    <div className={classes.toolbarIcon}>\n                        <IconButton onClick={this.handleCloseLeftMenu}>\n                            <ChevronLeftIcon/>\n                        </IconButton>\n                    </div>\n                    <Divider/>\n                    <List>\n                        <div>\n                            {environments.map((value, index) => {\n                                return <ListItem button key={`menu-${value.id}`}>\n                                    <ListItemIcon>\n                                        {React.createElement(Icons[value.icon])}\n                                    </ListItemIcon>\n                                    <ListItemText primary={value.name}/>\n                                </ListItem>\n                            })}\n                        </div>\n                    </List>\n                </Drawer>\n                <SwipeableDrawer\n                    anchor=\"right\"\n                    onClose={this.handleCloseRightMenu}\n                    onOpen={this.handleOpenRightMenu}\n                    open={menuRightOpen}\n                >\n                    <div className={classes.toolbarIconRight}>\n                        <IconButton onClick={this.handleCloseRightMenu}>\n                            <ChevronRightIcon/>\n                        </IconButton>\n                    </div>\n                    <Divider/>\n                    <List>\n                        <div className={classes.rightMenu}>\n                            <div className={classes.chatMessages}>\n                                {chatMessages.map((value, index) => {\n                                    return <div key={`chatMessages-${value.id}`}>\n                                        <span className={classes.chatMessageAccount}>\n                                            {value.account.name}: &nbsp;\n                                        </span>\n                                        <span dangerouslySetInnerHTML={{__html: value.text}}/>\n                                    </div>\n                                })}\n                            </div>\n                            <form className={classes.chatForm} noValidate>\n                                <TextField\n                                    inputRef={this.chatInput}\n                                    className={classes.chatInput}\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    multiline\n                                    inputProps={{maxLength: 2048}}\n                                    rowsMax={4}\n                                    fullWidth\n                                    name=\"message\"\n                                    type=\"text\"\n                                    id=\"chat\"\n                                    value={message}\n                                    onChange={this.changeMessage}\n                                />\n                                <IconButton color=\"primary\" aria-label=\"Enviar\" onClick={this.handleSendMessage}>\n                                    <Send/>\n                                </IconButton>\n                            </form>\n                        </div>\n                        <Divider/>\n                    </List>\n                </SwipeableDrawer>\n                <main className={classes.content}>\n                    <div className={classes.appBarSpacer}/>\n                    <Container maxWidth=\"lg\" className={classes.container}>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12}>\n                                <Paper className={classes.paper}>\n                                    <h3>\n                                        <p dangerouslySetInnerHTML={{__html: currentEnvironment.description}}/>\n                                    </h3>\n\n                                    <Divider/>\n                                    <form className={classes.form} noValidate>\n                                        {currentEnvironment.questions.map((value, index) => {\n                                            return <div key={`div-question-${value.id}`}>\n                                                <h4 key={`question-${value.id}`}>\n                                                    <p dangerouslySetInnerHTML={{__html: value.description}}/>\n                                                </h4>\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    fullWidth\n                                                    name={`response-${index}`}\n                                                    label=\"Resposta\"\n                                                    multiline\n                                                    type=\"text\"\n                                                    inputProps={{maxLength: 1024}}\n                                                    rowsMax={4}\n                                                    key={`response-${index}`}\n                                                    id={`response-${index}`}\n                                                    value={value.responses.length === 0 ? \"\" : value.responses[0].text}\n                                                    onChange={this.changeResponse}\n                                                />\n                                            </div>;\n                                        })}\n                                    </form>\n                                </Paper>\n\n                                <Grid justify=\"space-between\" container spacing={2}>\n                                    <Grid item xs={6} className={classes.carGrid}>\n                                        <Paper className={classes.paper}>\n                                            <h3>Carro 1 está no(a) {car1.toEnvironment.name}</h3>\n                                            <Divider/>\n\n                                            {accounts1.map((value, index) => {\n                                                return <ListItem button key={`account1-${value.id}`}\n                                                                 onClick={() => this.selectAccount(index, 1)}>\n                                                    <ListItemIcon>\n                                                        <Adjust style={{color: value.color}}/>\n                                                    </ListItemIcon>\n                                                    <ListItemText primary={value.name}/>\n                                                </ListItem>\n                                            })}\n                                            <Divider/>\n                                            <TextField\n                                                variant=\"outlined\"\n                                                margin=\"normal\"\n                                                fullWidth\n                                                name=\"tool1\"\n                                                label=\"Ferramentas\"\n                                                multiline\n                                                type=\"text\"\n                                                rowsMax={4}\n                                                key=\"tool1\"\n                                                id=\"tool1\"\n                                                value={tool1}\n                                                onChange={this.changeValue}\n                                            />\n\n                                            <IconButton color=\"primary\" aria-label=\"Ir\" className={classes.carButton}\n                                                        onClick={() => this.handleCarGo(1)}>\n                                                <Send/>\n                                            </IconButton>\n                                        </Paper>\n                                    </Grid>\n                                    <Grid item xs={6} className={classes.carGrid}>\n                                        <Paper className={classes.paper}>\n                                            <h3>Carro 2 está no(a) {car2.toEnvironment.name}</h3>\n                                            <Divider/>\n\n                                            {accounts2.map((value, index) => {\n                                                return <ListItem button key={`account2-${value.id}`}\n                                                                 onClick={() => this.selectAccount(index, 2)}>\n                                                    <ListItemIcon>\n                                                        <Adjust style={{color: value.color}}/>\n                                                    </ListItemIcon>\n                                                    <ListItemText primary={value.name}/>\n                                                </ListItem>\n                                            })}\n                                            <Divider/>\n                                            <TextField\n                                                variant=\"outlined\"\n                                                margin=\"normal\"\n                                                fullWidth\n                                                name=\"tool2\"\n                                                label=\"Ferramentas\"\n                                                multiline\n                                                type=\"text\"\n                                                rowsMax={4}\n                                                key=\"tool2\"\n                                                id=\"tool2\"\n                                                value={tool2}\n                                                onChange={this.changeValue}\n                                            />\n\n                                            <IconButton color=\"primary\" aria-label=\"Ir\" className={classes.carButton}\n                                                        onClick={() => this.handleCarGo(2)}>\n                                                <Send/>\n                                            </IconButton>\n                                        </Paper>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Box pt={4}>\n                            <Copyright/>\n                        </Box>\n                    </Container>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(Styles)(Home)\n","import React from \"react\";\nimport {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\";\nimport SignUp from \"./pages/signup\";\nimport SignIn from \"./pages/signin\";\nimport Home from \"./pages/home\";\n\n\nimport {isAuthenticated} from \"./services/auth\";\n\nconst PrivateRoute = ({component: Component, ...rest}) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuthenticated() ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to={{pathname: \"/\", state: {from: props.location}}}/>\n            )\n        }\n    />\n);\n\nconst Routes = () => (\n    <BrowserRouter basename=\"/radioactive-game-web\">\n        <Switch>\n            <Route exact path=\"/\" component={SignIn}/>\n            <Route path=\"/signup\" component={SignUp}/>\n            <PrivateRoute path=\"/app\" component={Home}/>\n            <Route path=\"*\" component={() => <h1>Page not found</h1>}/>\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default Routes;","import React from \"react\";\nimport \"./styles/global\";\nimport Routes from \"./routes\";\n\nconst App = () => <Routes />;\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}